<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>麻瓜吃菜鸟</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-06-22T06:02:43.928Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Joden He</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>初识 OOM</title>
    <link href="http://yoursite.com/2019/06/20/Java/jvm/oom-1/"/>
    <id>http://yoursite.com/2019/06/20/Java/jvm/oom-1/</id>
    <published>2019-06-20T11:37:37.749Z</published>
    <updated>2019-06-22T06:02:43.928Z</updated>
    
    <content type="html"><![CDATA[<h3 id="什么是-OOM"><a href="#什么是-OOM" class="headerlink" title="什么是 OOM"></a>什么是 OOM</h3><p>OOM，Out of Memory，也就是超出了预设内存。</p><blockquote><p>java.lang.OutOfMemoryError，官方说明： Thrown when the Java Virtual Machine cannot allocate an object because it is out of memory, and no more memory could be made available by the garbage collector. 意思就是说，当 JVM 没有足够的内存来为对象分配空间，并且垃圾回收器也已经没有空间可回收时，就会抛出这个error（注：非exception，因为这个问题已经严重到不足以被应用处理）。</p></blockquote><h3 id="为什么会-OOM"><a href="#为什么会-OOM" class="headerlink" title="为什么会 OOM"></a>为什么会 OOM</h3><p>主要原因有两点</p><ol><li>分配内存不足，可用通过调整启动 VM 参数控制。</li><li>程序逻辑问题，占用过多内存并且使用完没有及时释放，造成内存泄露或者内存溢出。</li></ol><p>其中：</p><ul><li><p>内存泄漏：申请使用完的内存没有释放，导致虚拟机不能再次使用该内存，此时这段内存就泄露了，因为申请者不用了，而又不能被虚拟机分配给别人用。（往往是编码不当导致）</p></li><li><p>内存溢出：申请的内存超出了JVM能提供的内存大小，此时称之为溢出。</p></li></ul><h3 id="JVM-内存模型"><a href="#JVM-内存模型" class="headerlink" title="JVM 内存模型"></a>JVM 内存模型</h3><p>上面频繁提到的内存指的就是 JVM 内存模型。</p><p>JVM 在运行会管理以下的内存区域：</p><ul><li>程序计数器：当前线程执行的字节码的<font color="red">行号指示器</font>，<font color="red">线程私有</font>，记录每个线程当前执行字节码的位置，因为会有多个线程来并发执行各种不同的代码，所有每个线程会有自己的一个程序计数器，专门记录这个线程目前执行到哪一条字节码指令，也就是线程私有；</li><li>java 虚拟机栈：保存方法内局部变量数据的区域，线程私有。线程执行了一个方法，那么就会为这个方法调用创建对应的一个<font color="red">栈帧</font>。栈帧里有这个方法的局部变量表 、操作数栈、动态链接、方法出口等东西，调用执行任何方法的时候，都会给方法创建栈帧，然后入栈，调用完再出栈；</li><li>本地方法栈：类似“java 虚拟机栈”，但是为 native 方法的运行提供内存环境，调用本地操作系统里面的一些方法，可能是调用 c 语言写的底层类库提供的内存环境；</li><li>java 堆内存：对象内存分配的地方，内存垃圾回收的主要区域，所有线程共享。对象按不同的 “生存” 情况分为新生代，老年代等；</li><li>方法区/Metaspace：JDK 1.8 后叫做 Metaspace，JDK 8 开始把类的元数据放到本地堆内存(native heap)中，这一块区域就叫 Metaspace，详情见<a href="https://www.sczyh30.com/posts/Java/jvm-metaspace/" target="_blank" rel="noopener">深入探究 JVM | 探秘 Metaspace</a>；</li><li>堆外内存：并不是 JVM 运行时数据区的一部分，可直接访问的内存，比如 NIO 会用到这部分；</li></ul><h3 id="OOM-类型"><a href="#OOM-类型" class="headerlink" title="OOM 类型"></a>OOM 类型</h3><ul><li><code>java.lang.OutOfMemoryError: Java heap space</code>，比较常见，java 堆内存溢出。详情见<a href="https://blog.csdn.net/renfufei/article/details/76350794" target="_blank" rel="noopener">OutOfMemoryError系列（1）: Java heap space</a></li><li><code>java.lang.OutOfMemoryError: GC overhead limit exceeded</code>，程序基本上耗尽了所有的可用内存, GC也清理不了。详情见<a href="https://blog.csdn.net/renfufei/article/details/77585294" target="_blank" rel="noopener">OutOfMemoryError系列（2）: GC overhead limit exceeded</a></li><li><code>java.lang.OutOfMemoryError: PermGen space</code>，java 永久代溢出，也就是方法区溢出，jdk 7 之前。详情见<a href="https://blog.csdn.net/renfufei/article/details/77994177" target="_blank" rel="noopener">OutOfMemoryError系列（3）: Permgen space</a></li><li><code>java.lang.OutOfMemoryError: Metaspace</code>，相当于 jdk 7以前的 <code>java.lang.OutOfMemoryError: PermGen space</code>。详情见<a href="https://blog.csdn.net/renfufei/article/details/78061354" target="_blank" rel="noopener">OutOfMemoryError系列（4）: Metaspace</a></li><li><code>java.lang.StackOverflowError</code>，不会抛 OOM ERROR，但也是比较常见的 Java 内存溢出</li></ul><h3 id="查看应用进程id（pid）及启动-VM-参数"><a href="#查看应用进程id（pid）及启动-VM-参数" class="headerlink" title="查看应用进程id（pid）及启动 VM 参数"></a>查看应用进程id（pid）及启动 VM 参数</h3><p><code>jps -v</code> 查找应用进程 id </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">jps -v</span><br><span class="line"></span><br><span class="line">29591 Jps -Dapplication.home=/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.191.b12-1.el7_6.x86_64 -Xms8m</span><br><span class="line">9066 Bootstrap -Djava.util.logging.config.file=/xxx/tomcat/conf/logging.properties -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager -Xms512m -Xmx2048m -Djdk.tls.ephemeralDHKeySize=2048 -Xms4096m -Xmx10240m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/xxx/dump -Djava.protocol.handler.pkgs=org.apache.catalina.webresources -Dorg.apache.catalina.security.SecurityListener.UMASK=0027 -Dignore.endorsed.dirs= -Dcatalina.base=/xxx/tomcat -Dcatalina.home=/xxx/lib/tomcat -Djava.io.tmpdir=/xxx/tomcat/temp</span><br></pre></td></tr></table></figure><p><code>jinfo -flags &lt;pid&gt;</code> 查看 VM 启动参数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">jinfo -flags 9066</span><br><span class="line"></span><br><span class="line">Attaching to process ID 9066, please <span class="built_in">wait</span>...</span><br><span class="line">Debugger attached successfully.</span><br><span class="line">Server compiler detected.</span><br><span class="line">JVM version is 25.191-b12</span><br><span class="line">Non-default VM flags: -XX:CICompilerCount=3 -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=null -XX:InitialHeapSize=4294967296 -XX:MaxHeapSize=10737418240 -XX:MaxNewSize=3578789888 -XX:MinHeapDeltaBytes=524288 -XX:NewSize=1431306240 -XX:OldSize=2863661056 -XX:+UseCompressedClassPointers -XX:+UseCompressedOops -XX:+UseParallelGC</span><br><span class="line">Command line:  -Djava.util.logging.config.file=/xxx/tomcat/conf/logging.properties -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager -Xms512m -Xmx2048m -Djdk.tls.ephemeralDHKeySize=2048 -Xms4096m -Xmx10240m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/xxx/dump -Djava.protocol.handler.pkgs=org.apache.catalina.webresources -Dorg.apache.catalina.security.SecurityListener.UMASK=0027 -Dignore.endorsed.dirs= -Dcatalina.base=/xxx/tomcat -Dcatalina.home=/xxx/lib/tomcat -Djava.io.tmpdir=/xxx/tomcat/temp</span><br></pre></td></tr></table></figure><p><code>jmap -heap &lt;pid&gt;</code>   查看 VM 启动参数，以及堆内存情况</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">jmap -heap 9066</span><br><span class="line"></span><br><span class="line">Attaching to process ID 9066, please <span class="built_in">wait</span>...</span><br><span class="line">Debugger attached successfully.</span><br><span class="line">Server compiler detected.</span><br><span class="line">JVM version is 25.191-b12</span><br><span class="line"></span><br><span class="line">using thread-local object allocation.</span><br><span class="line">Parallel GC with 4 thread(s)</span><br><span class="line"></span><br><span class="line">Heap Configuration:</span><br><span class="line">   MinHeapFreeRatio         = 0</span><br><span class="line">   MaxHeapFreeRatio         = 100</span><br><span class="line">   MaxHeapSize              = 10737418240 (10240.0MB)</span><br><span class="line">   NewSize                  = 1431306240 (1365.0MB)</span><br><span class="line">   MaxNewSize               = 3578789888 (3413.0MB)</span><br><span class="line">   OldSize                  = 2863661056 (2731.0MB)</span><br><span class="line">   NewRatio                 = 2</span><br><span class="line">   SurvivorRatio            = 8</span><br><span class="line">   MetaspaceSize            = 21807104 (20.796875MB)</span><br><span class="line">   CompressedClassSpaceSize = 1073741824 (1024.0MB)</span><br><span class="line">   MaxMetaspaceSize         = 17592186044415 MB</span><br><span class="line">   G1HeapRegionSize         = 0 (0.0MB)</span><br><span class="line"></span><br><span class="line">Heap Usage:</span><br><span class="line">Exception <span class="keyword">in</span> thread <span class="string">"main"</span> java.lang.reflect.InvocationTargetException</span><br><span class="line">        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</span><br><span class="line">        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)</span><br><span class="line">        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)</span><br><span class="line">        at java.lang.reflect.Method.invoke(Method.java:498)</span><br><span class="line">        at sun.tools.jmap.JMap.runTool(JMap.java:201)</span><br><span class="line">        at sun.tools.jmap.JMap.main(JMap.java:130)</span><br><span class="line">Caused by: java.lang.RuntimeException: unknown CollectedHeap <span class="built_in">type</span> : class sun.jvm.hotspot.gc_interface.CollectedHeap</span><br><span class="line">        at sun.jvm.hotspot.tools.HeapSummary.run(HeapSummary.java:157)</span><br><span class="line">        at sun.jvm.hotspot.tools.Tool.startInternal(Tool.java:260)</span><br><span class="line">        at sun.jvm.hotspot.tools.Tool.start(Tool.java:223)</span><br><span class="line">        at sun.jvm.hotspot.tools.Tool.execute(Tool.java:118)</span><br><span class="line">        at sun.jvm.hotspot.tools.HeapSummary.main(HeapSummary.java:50)</span><br><span class="line">        ... 6 more</span><br></pre></td></tr></table></figure><p>上面报错解决 <a href="https://stackoverflow.com/questions/20109503/exception-when-taking-a-heapdump-using-jmap" target="_blank" rel="noopener">Exception when taking a heapdump using JMAP</a></p><p>解决再运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">jmap -heap 9066</span><br><span class="line"></span><br><span class="line">Attaching to process ID 9066, please <span class="built_in">wait</span>...</span><br><span class="line">Debugger attached successfully.</span><br><span class="line">Server compiler detected.</span><br><span class="line">JVM version is 25.191-b12</span><br><span class="line"></span><br><span class="line">using thread-local object allocation.</span><br><span class="line">Parallel GC with 4 thread(s)</span><br><span class="line"></span><br><span class="line">Heap Configuration:</span><br><span class="line">   MinHeapFreeRatio         = 0</span><br><span class="line">   MaxHeapFreeRatio         = 100</span><br><span class="line">   MaxHeapSize              = 10737418240 (10240.0MB)</span><br><span class="line">   NewSize                  = 1431306240 (1365.0MB)</span><br><span class="line">   MaxNewSize               = 3578789888 (3413.0MB)</span><br><span class="line">   OldSize                  = 2863661056 (2731.0MB)</span><br><span class="line">   NewRatio                 = 2</span><br><span class="line">   SurvivorRatio            = 8</span><br><span class="line">   MetaspaceSize            = 21807104 (20.796875MB)</span><br><span class="line">   CompressedClassSpaceSize = 1073741824 (1024.0MB)</span><br><span class="line">   MaxMetaspaceSize         = 17592186044415 MB</span><br><span class="line">   G1HeapRegionSize         = 0 (0.0MB)</span><br><span class="line"></span><br><span class="line">Heap Usage:</span><br><span class="line">PS Young Generation</span><br><span class="line">Eden Space:</span><br><span class="line">   capacity = 1209532416 (1153.5MB)</span><br><span class="line">   used     = 279076032 (266.14764404296875MB)</span><br><span class="line">   free     = 930456384 (887.3523559570312MB)</span><br><span class="line">   23.073051065710338% used</span><br><span class="line">From Space:</span><br><span class="line">   capacity = 112721920 (107.5MB)</span><br><span class="line">   used     = 9442424 (9.004997253417969MB)</span><br><span class="line">   free     = 103279496 (98.49500274658203MB)</span><br><span class="line">   8.376741631086482% used</span><br><span class="line">To Space:</span><br><span class="line">   capacity = 109051904 (104.0MB)</span><br><span class="line">   used     = 0 (0.0MB)</span><br><span class="line">   free     = 109051904 (104.0MB)</span><br><span class="line">   0.0% used</span><br><span class="line">PS Old Generation</span><br><span class="line">   capacity = 2976907264 (2839.0MB)</span><br><span class="line">   used     = 609708576 (581.4634094238281MB)</span><br><span class="line">   free     = 2367198688 (2257.536590576172MB)</span><br><span class="line">   20.481275428806907% used</span><br><span class="line"></span><br><span class="line">67050 interned Strings occupying 6996392 bytes.</span><br></pre></td></tr></table></figure><p>获取到的 VM 参数，可关注如下几项参数的情况</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-XX:+HeapDumpOnOutOfMemoryError  <span class="comment"># 是否开启 OOM 时输出 dump 文件，+ 表示开启</span></span><br><span class="line">-XX:HeapDumpPath=/data/logs      <span class="comment"># 若配置该项，dump 文件输出到该路径下</span></span><br><span class="line"></span><br><span class="line">-XX:+PrintGCDetails              <span class="comment"># 是否打印 GC 详细信息</span></span><br><span class="line">-XX:+PrintGCTimeStamps           <span class="comment"># 是否打印 GC 时间戳(基准形式)</span></span><br><span class="line">-XX:+PrintGCDateStamps           <span class="comment"># 是否打印 GC 时间戳(日期形式)</span></span><br><span class="line">-XX:+PrintTenuringDistribution   <span class="comment"># 在每次新生代 GC 时，输出幸存区中对象的年龄分布</span></span><br><span class="line">-Xloggc:/data/logs               <span class="comment"># 若配置该项，GC 日志输出到该路径下</span></span><br></pre></td></tr></table></figure><p>如果应用没有启用相应的参数输出日志，可以进行以下操作查看相关日志</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.查看应用 GC 次数及平均每次 GC 时间</span></span><br><span class="line">jstat -gc &lt;pid&gt; 5000 <span class="comment"># 每 5 秒显示一次 pid 的进程生成 GC 情况</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.查看 JVM 堆内存不同代的具体使用情况</span></span><br><span class="line">jmap -heap &lt;pid&gt; <span class="comment"># 参照上面使用</span></span><br></pre></td></tr></table></figure><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://jluncc.github.io/2019/06/10/oom-analysis-1/" target="_blank" rel="noopener">Java OOM 分析</a></p><p><a href="https://blog.csdn.net/renfufei/article/details/76350794" target="_blank" rel="noopener">OutOfMemoryError系列</a></p><p><a href="https://www.sczyh30.com/posts/Java/jvm-metaspace/" target="_blank" rel="noopener">深入探究 JVM | 探秘 Metaspace</a></p>]]></content>
    
    <summary type="html">
    
      在进行 java 编程的时候，难免会遇到 java.lang.OutOfMemoryError (简称 OOM)，也就是程序内存不够用，这里让我们简单的了解一下 OOM。
    
    </summary>
    
      <category term="Java" scheme="http://yoursite.com/categories/Java/"/>
    
      <category term="jvm" scheme="http://yoursite.com/categories/Java/jvm/"/>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
      <category term="jvm" scheme="http://yoursite.com/tags/jvm/"/>
    
  </entry>
  
  <entry>
    <title>[译文] Spring Security – security none, filters none, access permitAll</title>
    <link href="http://yoursite.com/2019/03/28/Java/spring/security-none-filters-none-access-permitAll/"/>
    <id>http://yoursite.com/2019/03/28/Java/spring/security-none-filters-none-access-permitAll/</id>
    <published>2019-03-28T14:37:45.593Z</published>
    <updated>2019-03-28T16:04:08.225Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>版权说明，文章翻译至 <a href="https://www.baeldung.com/security-none-filters-none-access-permitAll" target="_blank" rel="noopener">Spring Security – security none, filters none, access permitAll</a></p></blockquote><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>Spring Security 提供了几种将请求模式配置为不安全或者允许所有访问的机制。根据这些机制的不同，这可能意味着根本不在这个路径上运行安全过滤器链，或者运行了安全过滤器链但允许访问。</p><h3 id="access-”permitAll”"><a href="#access-”permitAll”" class="headerlink" title="access=”permitAll”"></a><em>access=”permitAll”</em></h3><p>给 <em>&lt;intercept-url></em> 标签设置 <em>access=”permitAll”</em> 元素，将会给指定路径<strong>允许</strong>所有请求授权:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">intercept-url</span> <span class="attr">pattern</span>=<span class="string">"/login*"</span> <span class="attr">access</span>=<span class="string">"permitAll"</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>或者通过 java 配置:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http.authorizeRequests().antMatchers(<span class="string">"/login*"</span>).permitAll()</span><br></pre></td></tr></table></figure><p>这是在<strong>不禁用安全过滤器</strong>的情况下实现的，这些过滤器仍在运行，因此任何与 Spring Security 相关的功能仍然可以使用。</p><h3 id="filters-”none”"><a href="#filters-”none”" class="headerlink" title="filters=”none”"></a><em>filters=”none”</em></h3><p>这是在 Spring 3.1 前的功能，<strong>已在 Spring 3.1 中弃用和被替代了</strong>。</p><p>这个 filter 属性完全禁用指定的请求路径上的 Spring Security 过滤器链:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">intercept-url</span> <span class="attr">pattern</span>=<span class="string">"/login*"</span> <span class="attr">filters</span>=<span class="string">"none"</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>当处理请求需要 Spring Security 的某些功能时，这可能会有问题。</p><p>由于在 Spring 3.0+ 版本这是一个被弃用的功能，在 Spring 3.1 中使用它将导致启动时出现运行时异常:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">SEVERE: Context initialization failed</span><br><span class="line">org.springframework.beans.factory.parsing.BeanDefinitionParsingException: </span><br><span class="line">Configuration problem: The use of "filters='none'" is no longer supported. </span><br><span class="line">Please define a separate &lt;http&gt; element for the pattern you want to exclude </span><br><span class="line">and use the attribute "security='none'".</span><br><span class="line">Offending resource: class path resource [webSecurityConfig.xml]</span><br><span class="line">    at o.s.b.f.p.FailFastProblemReporter.error(FailFastProblemReporter.java:68)</span><br></pre></td></tr></table></figure><h3 id="security-”none”"><a href="#security-”none”" class="headerlink" title="security=”none”"></a><em>security=”none”</em></h3><p>正如我们在上面的错误消息中看到的那样，Spring 3.1 用一个新的表达式替换 <em>filters =“none”</em>  - <em>security =“none”</em>。</p><p>范围也发生了变化 —— 这不再在 <em>&lt;intercept-url></em> 元素级别指定。相反，Spring 3.1 允许定义多个 <em>&lt;http></em> 元素，每个元素都有自己的安全过滤链配置。因此，新的安全属性现在属于 <em>&lt;http></em> 元素级别。</p><p>在实际使用中，它长这样:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">http</span> <span class="attr">pattern</span>=<span class="string">"/resources/**"</span> <span class="attr">security</span>=<span class="string">"none"</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>或者通过 java 配置:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">web.ignoring().antMatchers(<span class="string">"/resources/**"</span>);</span><br></pre></td></tr></table></figure><p>而不是旧的:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">intercept-url</span> <span class="attr">pattern</span>=<span class="string">"/resources/**"</span> <span class="attr">filters</span>=<span class="string">"none"</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>与 <em>filters =“none”</em> 类似，这也将完全禁用该请求路径的安全过滤器链 - 因此，当在应用程序中处理请求时，Spring Security 功能将不可用。</p><p>对于上面的示例而言，这不是问题，其主要涉及<strong>提供静态资源</strong> - 在实际中不需要做特殊处理。但是，如果以某种方式以编程方式处理请求 - 那么安全功能（例如，<em>requires-channel</em>，访问当前用户或调用安全方法）将不可用。</p><p>出于同样的原因，在已经配置了 <em>security=”none”</em> 的 <em>&lt;http></em> 元素上指定附加属性是没有意义的，因为该请求路径是不安全的，这些属性将被忽略。</p><p>或者，<em>access=’IS_AUTHENTICATED_ANONYMOUSLY’</em>  可用于允许匿名访问。</p><h3 id="Caveats-for-security-”none”"><a href="#Caveats-for-security-”none”" class="headerlink" title="Caveats for security=”none”"></a><em>Caveats for security=”none”</em></h3><p>当使用多个 <em>&lt;http></em> 元素时，有些配置了 <em>security =“none”</em>，请记住，定义这些元素的顺序很重要。我们应该首先使用特定的 <em>&lt;http></em> 路径，最后再使用通用模式。</p><p>另请注意，如果 <em>&lt;http></em> 元素<strong>未指定模式</strong>，则默认情况下，映射到通用匹配模式 - “/** ” - 因此，此元素必须是最后一个。如果元素的顺序不正确，<strong>则安全过滤器链</strong>的<strong>创建将失败</strong>：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Caused by: java.lang.IllegalArgumentException: A universal match pattern ('/**') </span><br><span class="line">is defined  before other patterns in the filter chain, causing them to be ignored. </span><br><span class="line">Please check the ordering in your &lt;security:http&gt; namespace or FilterChainProxy bean configuration</span><br><span class="line">    at o.s.s.c.h.DefaultFilterChainValidator.checkPathOrder(DefaultFilterChainValidator.java:49)</span><br><span class="line">    at o.s.s.c.h.DefaultFilterChainValidator.validate(DefaultFilterChainValidator.java:39)</span><br></pre></td></tr></table></figure><h3 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h3><p>本文讨论了允许使用 Spring Security 访问路径的选项 - 重点关注 <strong>filters =“none”，security =“none” 和 access =“permitAll”</strong> 之间的差异。</p><p>像往常一样，这些例子可以在 <a href="https://github.com/eugenp/tutorials/tree/master/spring-security-mvc-ldap" target="_blank" rel="noopener">GitHub</a> 上找到。</p><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ul><li><a href="https://www.baeldung.com/security-none-filters-none-access-permitAll" target="_blank" rel="noopener">Spring Security – security none, filters none, access permitAll</a></li></ul>]]></content>
    
    <summary type="html">
    
      Spring Security 提供了几种将请求模式配置为不安全或者允许所有访问的机制。根据这些机制的不同，这可能意味着根本不在这个路径上运行安全过滤器链，或者运行了安全过滤器链但允许访问
    
    </summary>
    
      <category term="Java" scheme="http://yoursite.com/categories/Java/"/>
    
      <category term="Spring" scheme="http://yoursite.com/categories/Java/Spring/"/>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
      <category term="Spring" scheme="http://yoursite.com/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>Java 代理中转下载 url 文件</title>
    <link href="http://yoursite.com/2019/03/21/Java/java-proxy-url-file/"/>
    <id>http://yoursite.com/2019/03/21/Java/java-proxy-url-file/</id>
    <published>2019-03-21T06:53:10.427Z</published>
    <updated>2019-03-21T07:34:24.825Z</updated>
    
    <content type="html"><![CDATA[<h3 id="场景描述"><a href="#场景描述" class="headerlink" title="场景描述"></a>场景描述</h3><p>我们有一个外网访问的 java web 系统 A，这个系统会去请求一个内网系统 B 获取文件接口，这个接口会返回一个内网的下载地址给我们。假如我们只是把地址提供出去，这个时候外网是无法下载到文件的，所以我们需要在 A 系统对 B 系统返回的文件下载地址进行中转，从而暴露出基于 A 系统的外网下载地址。</p><h3 id="代码开发"><a href="#代码开发" class="headerlink" title="代码开发"></a>代码开发</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * url 文件代理中转</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> response</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> address</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> contentType</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> fileName</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">proxyUrlFile</span><span class="params">(HttpServletResponse response, String address, String contentType, String fileName)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">     InputStream inputStream = <span class="keyword">null</span>;</span><br><span class="line">     ServletOutputStream outputStream = <span class="keyword">null</span>;</span><br><span class="line">     HttpURLConnection httpURLConnection = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">try</span> &#123;</span><br><span class="line">         URL url = <span class="keyword">new</span> URL(address);</span><br><span class="line">         httpURLConnection = (HttpURLConnection) url.openConnection();</span><br><span class="line">         httpURLConnection.connect();</span><br><span class="line">         inputStream = httpURLConnection.getInputStream();</span><br><span class="line"></span><br><span class="line">         outputStream = response.getOutputStream();</span><br><span class="line"></span><br><span class="line">         <span class="keyword">if</span> (contentType != <span class="keyword">null</span>) &#123;</span><br><span class="line">             response.setContentType(contentType);</span><br><span class="line">         &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">             <span class="comment">// 设置文件ContentType类型，这样设置，会自动判断下载文件类型</span></span><br><span class="line">             response.setContentType(<span class="string">"multipart/form-data"</span>);</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">if</span> (fileName != <span class="keyword">null</span>) &#123;</span><br><span class="line">             response.setHeader(<span class="string">"Content-disposition"</span>, <span class="string">"attachment; filename=\""</span></span><br><span class="line">                     + <span class="keyword">new</span> String(fileName.getBytes(<span class="string">"utf-8"</span>), <span class="string">"ISO8859-1"</span>)+<span class="string">"\""</span>);</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">         <span class="comment">// 创建一个Buffer字符串</span></span><br><span class="line">         <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">         <span class="comment">// 每次读取的字符串长度，如果为-1，代表全部读取完毕</span></span><br><span class="line">         <span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line">         <span class="comment">// 使用一个输入流从buffer里把数据读取出来</span></span><br><span class="line">         <span class="keyword">while</span>((len = inputStream.read(buffer)) != -<span class="number">1</span> )&#123;</span><br><span class="line">             <span class="comment">// 用输出流往buffer里写入数据，中间参数代表从哪个位置开始读，len代表读取的长度</span></span><br><span class="line">             outputStream.write(buffer, <span class="number">0</span>, len);</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">     &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">         log.error(<span class="string">"Proxy URL File error, e = &#123;&#125;"</span>, e);</span><br><span class="line">         <span class="keyword">throw</span> e;</span><br><span class="line">     &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">         <span class="keyword">if</span> (inputStream != <span class="keyword">null</span>) &#123;</span><br><span class="line">             inputStream.close();</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">if</span> (outputStream != <span class="keyword">null</span>) &#123;</span><br><span class="line">             outputStream.flush();</span><br><span class="line">             outputStream.close();</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">if</span> (httpURLConnection != <span class="keyword">null</span>) &#123;</span><br><span class="line">             httpURLConnection.disconnect();</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * url 文件代理中转</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> response</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fileName</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/fnd/proxy/url/file"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">proxyFile</span><span class="params">(HttpServletResponse response, @RequestParam(<span class="string">"fileName"</span>)</span> String fileName, @<span class="title">RequestParam</span><span class="params">(<span class="string">"url"</span>)</span> String url) <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        FileOperateUtil.proxyUrlFile(response, url, <span class="keyword">null</span>, fileName);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      有时候由于网络问题，我们需要在服务器对别的系统内网的文件下载中转，然后暴露出外网下载地址。
    
    </summary>
    
      <category term="Java" scheme="http://yoursite.com/categories/Java/"/>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>ADFS 安装及配置</title>
    <link href="http://yoursite.com/2019/03/11/sso/adfs/adfs-install/"/>
    <id>http://yoursite.com/2019/03/11/sso/adfs/adfs-install/</id>
    <published>2019-03-11T13:36:17.601Z</published>
    <updated>2019-03-11T13:55:48.459Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装前准备"><a href="#安装前准备" class="headerlink" title="安装前准备"></a>安装前准备</h3><p>在安装 ADFS 之前，我们需要准备号 DC，参考 <a href="https://blog.joden123.top/2019/03/09/sso/adfs/adds-install/" target="_blank" rel="noopener">ADDS 活动目录安装详解</a></p><p><img src="/images/sso/adfs/adfs-install/dc.png" alt="DC"></p><h3 id="安装配置证书服务"><a href="#安装配置证书服务" class="headerlink" title="安装配置证书服务"></a>安装配置证书服务</h3><h4 id="在-DC-上安装-CA"><a href="#在-DC-上安装-CA" class="headerlink" title="在 DC 上安装 CA"></a>在 DC 上安装 CA</h4><ul><li>打开服务器管理器，点击 “添加角色和功能”</li></ul><p><img src="/images/sso/adfs/adfs-install/step1.png" alt="step 1"></p><ul><li>保持默认，并连续点击三次“下一步”</li></ul><p><img src="/images/sso/adfs/adfs-install/step2.png" alt="step 2"></p><ul><li>勾选 “Active Directory 证书服务”，然后选择添加所需的功能，最后点“下一步”继续</li></ul><p><img src="/images/sso/adfs/adfs-install/step3.png" alt="step 3"></p><ul><li>功能选择页面保持默认，连续点击2次“下一步”</li></ul><p><img src="/images/sso/adfs/adfs-install/step4.png" alt="step 4"></p><ul><li>勾选 CA 相关服务, 一直点下一步，最后点击安装</li></ul><p><img src="/images/sso/adfs/adfs-install/step5.png" alt="step 5.1"></p><ul><li>安装完成</li></ul><p><img src="/images/sso/adfs/adfs-install/step6.png" alt="step 6"></p><h4 id="配置证书服务"><a href="#配置证书服务" class="headerlink" title="配置证书服务"></a>配置证书服务</h4><ul><li>CA 安装完成后，如图点击提示图标后，选择“配置目标服务器上的 Active Directory 证书服务”</li></ul><p><img src="/images/sso/adfs/adfs-install/step7.png" alt="step 7"></p><ul><li>根据向导进行配置</li></ul><p><img src="/images/sso/adfs/adfs-install/step8.png" alt="step 8"></p><ul><li>勾选所需要配置的服务</li></ul><p><img src="/images/sso/adfs/adfs-install/step9.png" alt="step 9"></p><ul><li>选择企业根</li></ul><p><img src="/images/sso/adfs/adfs-install/step10.1.png" alt="step 10.1"></p><p><img src="/images/sso/adfs/adfs-install/step10.2.png" alt="step 10.2"></p><ul><li>创建新的私钥</li></ul><p><img src="/images/sso/adfs/adfs-install/step11.1.png" alt="step 11.1"></p><p><img src="/images/sso/adfs/adfs-install/step11.2.png" alt="step 11.2"></p><ul><li>指定 CA 名称</li></ul><p><img src="/images/sso/adfs/adfs-install/step12.png" alt="step 12"></p><ul><li>指定有效期</li></ul><p><img src="/images/sso/adfs/adfs-install/step13.png" alt="step 13"></p><ul><li>指定数据库位置</li></ul><p><img src="/images/sso/adfs/adfs-install/step14.png" alt="step 14"></p><ul><li>确认配置信息</li></ul><p><img src="/images/sso/adfs/adfs-install/step15.png" alt="step 15"></p><ul><li>配置完成</li></ul><p><img src="/images/sso/adfs/adfs-install/step16.png" alt="step 16"></p><ul><li>验证 CA</li></ul><p><img src="/images/sso/adfs/adfs-install/step17.1.png" alt="step 17.1"></p><p><img src="/images/sso/adfs/adfs-install/step17.2.png" alt="step 17.2"></p><p>以上环境准备好后就可以配置 ADFS 服务器了。在配置前我们需要给计算机或者指定的用户或者计算机授权证书颁发。</p><h3 id="安装ADFS服务"><a href="#安装ADFS服务" class="headerlink" title="安装ADFS服务"></a>安装ADFS服务</h3><p>在安装 ADFS 之前，我们需要创建和配置证书</p><h4 id="创建证书"><a href="#创建证书" class="headerlink" title="创建证书"></a>创建证书</h4><p>账户准备好后，然后申请证书，其实有很常见的两种方法，第一种就是通过iis进行证书申请，第二种通过 mmc 控制台进行申请，这里使用IIS的申请方法。</p><ul><li>打开IIS管理器，选择【服务器证书】<br>创建证书申请 </li></ul><p><img src="/images/sso/adfs/adfs-install/step23.1.png" alt="step 23.1"></p><p><img src="/images/sso/adfs/adfs-install/step23.2.png" alt="step 23.2"></p><p><img src="/images/sso/adfs/adfs-install/step23.3.png" alt="step 23.3"></p><p><img src="/images/sso/adfs/adfs-install/step23.4.png" alt="step 23.4"></p><p><img src="/images/sso/adfs/adfs-install/step23.5.png" alt="step 23.5"></p><p>保存到桌面上：cert.txt</p><h4 id="配置证书"><a href="#配置证书" class="headerlink" title="配置证书"></a>配置证书</h4><ul><li>服务器浏览器，输入 <a href="http://127.0.0.1/certsrv/" target="_blank" rel="noopener">http://127.0.0.1/certsrv/</a> 如下：</li></ul><p><img src="/images/sso/adfs/adfs-install/step24.1.png" alt="step 24.1"></p><ul><li>选择申请证书——&gt;高级证书申请 </li></ul><p><img src="/images/sso/adfs/adfs-install/step24.2.png" alt="step 24.2"></p><ul><li>选择： 使用 base64 编码的 CMC 或 PKCS #10 文件提交 一个证书申请，或使用 base64 编码的 PKCS #7 文件续订证书申请</li></ul><p><img src="/images/sso/adfs/adfs-install/step24.3.png" alt="step 24.3"></p><ul><li>打开cert.txt ，粘贴进去，证书模板选择 web服务器，提交 </li></ul><p><img src="/images/sso/adfs/adfs-install/step24.4.png" alt="step 24.4"></p><ul><li>下载证书，保存到本地：</li></ul><p><img src="/images/sso/adfs/adfs-install/step24.5.png" alt="step 24.5"></p><ul><li>回到iis管理器，选择完成证书申请</li></ul><p><img src="/images/sso/adfs/adfs-install/step24.6.png" alt="step 24.6"></p><p><img src="/images/sso/adfs/adfs-install/step24.7.png" alt="step 24.7"></p><p><img src="/images/sso/adfs/adfs-install/step24.8.png" alt="step 24.8"></p><ul><li><p>将 default web site 的 https 绑定证书改为刚才完成的证书</p><blockquote><p>选择 default web site , 右键 编辑绑定，选择 https（没有则添加） ， 点击编辑，选择 ssl 证书:（ 这个证书在安装adfs时使用该证书） </p></blockquote></li></ul><p><img src="/images/sso/adfs/adfs-install/step25.2.png" alt="step 25.2"></p><h4 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h4><ul><li>打开服务器管理器，点击 “添加角色和功能”</li></ul><p><img src="/images/sso/adfs/adfs-install/step1.png" alt="step 1"></p><ul><li>保持默认，并连续点击三次“下一步”</li></ul><p><img src="/images/sso/adfs/adfs-install/step2.png" alt="step 2"></p><ul><li>勾选 “Active Directory Federation Services” 安装服务角色</li></ul><p><img src="/images/sso/adfs/adfs-install/step26.1.png" alt="step 26.1"></p><ul><li>功能选择页面保持默认，连续点击2次“下一步”</li></ul><p><img src="/images/sso/adfs/adfs-install/step26.2.png" alt="step 26.2"></p><ul><li>安装</li></ul><p><img src="/images/sso/adfs/adfs-install/step26.3.png" alt="step 26.3"></p><ul><li>安装完成</li></ul><p><img src="/images/sso/adfs/adfs-install/step26.4.png" alt="step 26.4"></p><ul><li>ADFS 安装完成后，如图点击提示图标后，选择“在此服务器上配置联合身份验证服务”</li></ul><p><img src="/images/sso/adfs/adfs-install/step26.5.png" alt="step 26.5"></p><ul><li>功能选择页面保持默认，连续点击2次“下一步”</li></ul><p><img src="/images/sso/adfs/adfs-install/step26.6.png" alt="step 26.6"></p><ul><li>选择证书(不是前面创建的证书)，填写显示的名称</li></ul><p><img src="/images/sso/adfs/adfs-install/step26.7.png" alt="step 26.7"></p><ul><li>选择 adfs 服务帐号</li></ul><p><img src="/images/sso/adfs/adfs-install/step26.8.png" alt="step 26.8"></p><ul><li>指定配置数据库</li></ul><p><img src="/images/sso/adfs/adfs-install/step26.10.png" alt="step 26.10"></p><ul><li>下一步</li></ul><p><img src="/images/sso/adfs/adfs-install/step26.11.png" alt="step 26.11"></p><ul><li>配置</li></ul><p><img src="/images/sso/adfs/adfs-install/step26.12.png" alt="step 26.12"></p><ul><li>配置完成</li></ul><p><img src="/images/sso/adfs/adfs-install/step26.13.png" alt="step 26.13"></p><p>至此 ADFS 安装配置完成</p><p><img src="/images/sso/adfs/adfs-install/step27.png" alt="step 27"></p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://blog.51cto.com/gaowenlong/1920117" target="_blank" rel="noopener">Windows Server 2016 安装及配置 ADFS 4.0</a></p><p><a href="https://blog.csdn.net/xu_guowei/article/details/47781727" target="_blank" rel="noopener">Server2012 下 部署adfs IFD</a></p>]]></content>
    
    <summary type="html">
    
      本文介绍 Windows Server 2012R2 下安装接配置 ADFS。ADFS (Active Directory Federation Services) 活动目录联合服务将活动目录拓展到 Internet，当用户通过活动目录认证时，域控制器检查用户的证书。证明是合法用户后，用户就可以随意访问 Windows 网络的任何授权资源，而无需在每次访问不同服务器时重新认证。
    
    </summary>
    
      <category term="SSO" scheme="http://yoursite.com/categories/SSO/"/>
    
      <category term="ADFS" scheme="http://yoursite.com/categories/SSO/ADFS/"/>
    
    
      <category term="SSO" scheme="http://yoursite.com/tags/SSO/"/>
    
      <category term="ADFS" scheme="http://yoursite.com/tags/ADFS/"/>
    
  </entry>
  
  <entry>
    <title>ADDS 活动目录安装详解</title>
    <link href="http://yoursite.com/2019/03/09/sso/adfs/adds-install/"/>
    <id>http://yoursite.com/2019/03/09/sso/adfs/adds-install/</id>
    <published>2019-03-09T10:15:27.935Z</published>
    <updated>2019-03-11T13:54:13.274Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装前准备"><a href="#安装前准备" class="headerlink" title="安装前准备"></a>安装前准备</h3><p>确保域控制器 (DC) 的计算机名符合企业命名规范，因为 AD 安装完成后再更改 DC 计算机相对复杂而且存在风险。DC 需要使用固定的静态IP地址，并且把DNS设置指向本机IP。</p><p>这台电脑 (右键) –&gt; 属性，更改设置：</p><p><img src="/images/sso/adfs/adds-install/cp-name.png" alt="computer name"></p><p>网络 (右键) –&gt; 属性 –&gt; 以太网 –&gt; 属性 –&gt; Internet 协议版本 4（TCP/IPV4） –&gt; 属性</p><p><img src="/images/sso/adfs/adds-install/network.png" alt="network"></p><h3 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h3><ul><li>打开服务器管理器，点击 “添加角色和功能”</li></ul><p><img src="/images/sso/adfs/adds-install/step1.png" alt="step 1"></p><ul><li>保持默认，并连续点击三次“下一步”。</li></ul><p><img src="/images/sso/adfs/adds-install/step2.png" alt="step 2"></p><ul><li>勾选 “ActiveDirectory域服务”，然后选择添加所需的功能，最后点“下一步”继续。</li></ul><p><img src="/images/sso/adfs/adds-install/step3.png" alt="step 3"></p><ul><li>功能选择页面保持默认，连续点击2次“下一步”。</li></ul><p><img src="/images/sso/adfs/adds-install/step4.png" alt="step 4"></p><ul><li>勾选自动重启服务器，点击“安装”。</li></ul><p><img src="/images/sso/adfs/adds-install/step5.1.png" alt="step 5.1"></p><p><img src="/images/sso/adfs/adds-install/step5.2.png" alt="step 5.2"></p><ul><li>完成ADDS安装后，如图点击提示图标后，选择“将此服务器提升为域控制器”。</li></ul><p><img src="/images/sso/adfs/adds-install/step6.png" alt="step 6"></p><ul><li>由于这是第一台域控制器(DC)，也叫林根域。选择“添加新林”，然后输入根域名。</li></ul><p><img src="/images/sso/adfs/adds-install/step7.png" alt="step 7"></p><ul><li>选择林和域功能级别，勾选DNS(AD需要高度集成DNS)，并输入目录还原模式密码。</li></ul><p><img src="/images/sso/adfs/adds-install/step8.png" alt="step 8"></p><ul><li>由于现在还没有DNS服务器，所以会提示无法创建委派。直接“下一步”。</li></ul><p><img src="/images/sso/adfs/adds-install/step9.png" alt="step 9"></p><ul><li>NetBIOS名以及ADDS数据库、日志、Sysvol保存位置，如果企业没有特殊要求，一般保持默认即可。</li></ul><p><img src="/images/sso/adfs/adds-install/step10.1.png" alt="step 10.1"></p><p><img src="/images/sso/adfs/adds-install/step10.2.png" alt="step 10.2"></p><ul><li>检查配置无误后点击“下一步”，然后点击“安装”，等待安装完成后重启即可。</li></ul><p><img src="/images/sso/adfs/adds-install/step11.1.png" alt="step 11.1"></p><p><img src="/images/sso/adfs/adds-install/step11.2.png" alt="step 11.2"></p><p>至此完成 <code>ActiveDirectory</code> 的全部安装。已经可以对外提供服务了。</p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://blog.51cto.com/labixiaoniu/1253454" target="_blank" rel="noopener">Active Directory管理之一:活动目录安装详解</a></p>]]></content>
    
    <summary type="html">
    
      本文演示如何使用 windows server 2012 R2  安装 ADDS 服务
    
    </summary>
    
      <category term="SSO" scheme="http://yoursite.com/categories/SSO/"/>
    
      <category term="ADFS" scheme="http://yoursite.com/categories/SSO/ADFS/"/>
    
    
      <category term="SSO" scheme="http://yoursite.com/tags/SSO/"/>
    
      <category term="ADFS" scheme="http://yoursite.com/tags/ADFS/"/>
    
      <category term="ADDS" scheme="http://yoursite.com/tags/ADDS/"/>
    
  </entry>
  
  <entry>
    <title>[转载] 获取被代理类的真实类</title>
    <link href="http://yoursite.com/2019/03/07/Java/spring/target-class/"/>
    <id>http://yoursite.com/2019/03/07/Java/spring/target-class/</id>
    <published>2019-03-07T12:29:17.151Z</published>
    <updated>2019-03-07T12:56:00.894Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>版权说明，文章转载自 <a href="http://imushan.com/2017/03/13/java/spring/Spring%E7%AC%94%E8%AE%B0-%E8%8E%B7%E5%8F%96%E8%A2%AB%E4%BB%A3%E7%90%86%E7%9A%84%E7%9C%9F%E5%AE%9E%E7%B1%BB/" target="_blank" rel="noopener">Spring 笔记-获取被代理的真实类</a></p></blockquote><p>对一个 <code>Autowired</code> 进来的类调用 <code>getClass</code>，发现得到的类是: <code>com.xxx.search.provider.service.SearchServiceImpl$$EnhancerBySpringCGLIB$$129db519</code>，一看就不是正经类。从名字中可以看出，这个是被代理后的类，可能因为这个类被AOP了吧。但是我在反射操作是需要原始的类的信息，要如何得到呢？</p><p><code>org.springframework.aop</code> 下有一个很重要的接口: <code>TargetClassAware</code>, 这个接口表示目前这个类是被代理的。所以我们可以通过判断一个实例是否是 <code>TargetClassAware</code> 的实例来判断他是否是一个代理类。而且 <code>TargetClassAware</code> 接口提供了 <code>getTargetClass</code> 方法来获取真实类。可以这么用：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (aInstance <span class="keyword">instanceof</span> TargetClassAware) &#123;</span><br><span class="line">    aInstance.getTargetClass();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>不过更推荐的做法是使用 <code>org.springframework.aop.support.AopUtils</code> 提供的 <code>getTargetClass</code> 方法来获取真实类。可以看看其源码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> Class&lt;?&gt; getTargetClass(Object candidate) &#123;</span><br><span class="line">    Assert.notNull(candidate, <span class="string">"Candidate object must not be null"</span>);</span><br><span class="line">    Class result = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">if</span>(candidate <span class="keyword">instanceof</span> TargetClassAware) &#123;</span><br><span class="line">        result = ((TargetClassAware)candidate).getTargetClass();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(result == <span class="keyword">null</span>) &#123;</span><br><span class="line">        result = isCglibProxy(candidate)?candidate.getClass().getSuperclass():candidate.getClass();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码首先判断当前类是否是 <code>TargetClassAware</code> 的实现，如果是，调用 <code>getTargetClass</code>，方法还判断当前类是否是 <code>CglibProxy</code>，如果是基于 <code>cglib</code> 的代理类，因为是基于继承来实现代理，所以获取父类就是真实类了。</p><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ul><li><a href="http://stackoverflow.com/questions/2289211/obtain-real-class-object-for-spring-bean" target="_blank" rel="noopener">java - Obtain real Class object for Spring bean - Stack Overflow</a></li><li><a href="http://docs.spring.io/spring/docs/3.0.x/javadoc-api/org/springframework/aop/support/AopUtils.html#getTargetClass(java.lang.Object" target="_blank" rel="noopener">AopUtils</a>)</li></ul>]]></content>
    
    <summary type="html">
    
      有时候我们使用 getClass 获取到的类是被代理的类而不是真实的类，那我们是怎么获取到真实的类的呢？
    
    </summary>
    
      <category term="Java" scheme="http://yoursite.com/categories/Java/"/>
    
      <category term="Spring" scheme="http://yoursite.com/categories/Java/Spring/"/>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
      <category term="Spring" scheme="http://yoursite.com/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>oracle cloud 如何获取图片 url</title>
    <link href="http://yoursite.com/2019/02/20/oracle-cloud/how-to-get-image-url/"/>
    <id>http://yoursite.com/2019/02/20/oracle-cloud/how-to-get-image-url/</id>
    <published>2019-02-20T13:22:56.636Z</published>
    <updated>2019-02-20T13:28:58.459Z</updated>
    
    <content type="html"><![CDATA[<p>以获取物料图片 <code>url</code> 作为例子</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">SELECT</span> (<span class="keyword">decode</span>(datatype_code,</span><br><span class="line">                <span class="string">'FILE'</span>,</span><br><span class="line">                (:p_host || <span class="string">'/cs/idcplg?IdcService=GET_FILE&amp;dID='</span>) || dm_version_number,</span><br><span class="line">                <span class="string">'WEB_PAGE'</span>,</span><br><span class="line">                <span class="keyword">url</span>)) <span class="keyword">AS</span> image</span><br><span class="line"> <span class="keyword">FROM</span> fnd_attached_documents d,</span><br><span class="line"> fnd_documents_vl       dv</span><br><span class="line"> <span class="keyword">WHERE</span> d.document_id = d.document_id</span><br><span class="line"> <span class="keyword">AND</span> d.entity_name = <span class="string">'ITEM_ENTITY'</span></span><br><span class="line"> <span class="keyword">AND</span> d.pk1_value = to_char(esi.organization_id)</span><br><span class="line"> <span class="keyword">AND</span> d.pk2_value = to_char(esi.inventory_item_id)</span><br><span class="line"> <span class="keyword">AND</span> <span class="keyword">rownum</span> = <span class="number">1</span>) <span class="keyword">AS</span> item_photo</span><br></pre></td></tr></table></figure><blockquote><p> 其中 <code>p_host</code> 为 <code>cloud</code> 的主域名</p></blockquote><p>其他类型的图片 <code>url</code> 可以通过变换 <code>d.entity_name = &#39;ITEM_ENTITY&#39;</code> 进行查找</p>]]></content>
    
    <summary type="html">
    
      oracle cloud 中通过附件来管理图片信息，其中图片信息可以是外链 url, 也可以是上传图片信息，cloud 生成链接信息。
    
    </summary>
    
      <category term="Oracle Cloud" scheme="http://yoursite.com/categories/Oracle-Cloud/"/>
    
    
      <category term="Oracle Cloud" scheme="http://yoursite.com/tags/Oracle-Cloud/"/>
    
      <category term="attachment" scheme="http://yoursite.com/tags/attachment/"/>
    
  </entry>
  
  <entry>
    <title>如何获取 oracle cloud 的 PO 的 shipping method</title>
    <link href="http://yoursite.com/2019/02/20/oracle-cloud/po/how-to-get-shipping-method/"/>
    <id>http://yoursite.com/2019/02/20/oracle-cloud/po/how-to-get-shipping-method/</id>
    <published>2019-02-20T13:12:38.137Z</published>
    <updated>2019-02-20T13:20:20.028Z</updated>
    
    <content type="html"><![CDATA[<h3 id="版本信息"><a href="#版本信息" class="headerlink" title="版本信息"></a>版本信息</h3><h3 id="example"><a href="#example" class="headerlink" title="example"></a>example</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> po_bip_helper.get_shipping_method(carrierpartyname.party_name,</span><br><span class="line">                                         modeoftransportlookuppeo.meaning,</span><br><span class="line">                                         servicelevellookuppeo.meaning) <span class="keyword">AS</span> shippingmethod</span><br><span class="line">  <span class="keyword">FROM</span> wsh_carriers   carrier,</span><br><span class="line">       hz_parties     carrierpartyname,</span><br><span class="line">       fnd_lookups    modeoftransportlookuppeo,</span><br><span class="line">       fnd_lookups    servicelevellookuppeo,</span><br><span class="line">       po_headers_all header</span><br><span class="line"> <span class="keyword">WHERE</span> (header.mode_of_transport = modeoftransportlookuppeo.lookup_code(+) <span class="keyword">AND</span> modeoftransportlookuppeo.lookup_type(+) = <span class="string">'WSH_MODE_OF_TRANSPORT'</span>)</span><br><span class="line">   <span class="keyword">AND</span> (header.service_level = servicelevellookuppeo.lookup_code(+) <span class="keyword">AND</span> servicelevellookuppeo.lookup_type(+) = <span class="string">'WSH_SERVICE_LEVELS'</span>)</span><br><span class="line">   <span class="keyword">AND</span> header.carrier_id = carrier.carrier_id(+)</span><br><span class="line">   <span class="keyword">AND</span> carrier.carrier_id = carrierpartyname.party_id(+)</span><br><span class="line">   <span class="keyword">AND</span> header.segment1 = <span class="string">'20000028'</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      Oracle Cloud PO 界面上显示的 shipping method 在后台是通过几个字段来存储的，要获取该字段得使用函数获取。
    
    </summary>
    
      <category term="Oracle Cloud" scheme="http://yoursite.com/categories/Oracle-Cloud/"/>
    
      <category term="PO" scheme="http://yoursite.com/categories/Oracle-Cloud/PO/"/>
    
    
      <category term="Oracle Cloud" scheme="http://yoursite.com/tags/Oracle-Cloud/"/>
    
      <category term="PO" scheme="http://yoursite.com/tags/PO/"/>
    
  </entry>
  
  <entry>
    <title>如何获取 oracle cloud 的 Match Approval Level</title>
    <link href="http://yoursite.com/2019/02/20/oracle-cloud/how-to-get-match-approval-level/"/>
    <id>http://yoursite.com/2019/02/20/oracle-cloud/how-to-get-match-approval-level/</id>
    <published>2019-02-20T04:55:51.995Z</published>
    <updated>2019-02-20T13:09:42.230Z</updated>
    
    <content type="html"><![CDATA[<h3 id="版本信息"><a href="#版本信息" class="headerlink" title="版本信息"></a>版本信息</h3><p><strong>Oracle Cloud Application</strong></p><p><strong>Revision 13.18.10 (11.13.18.10.0)</strong></p><table><thead><tr><th>Title</th><th>Description</th></tr></thead><tbody><tr><td>Oracle Application Development Framework</td><td>JDEVADF_11.1.1.9.2ADF-REL131810-PROD-BP_GENERIC_181116.1437.7206</td></tr><tr><td>Oracle Middleware Extensions for Applications</td><td>ATGPF_PT.REL13.18.10_GENERIC_181113.1603.REL13BP16.7</td></tr><tr><td>Database Compatibility</td><td>TRUE (REL13BP16.7)</td></tr></tbody></table><h3 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h3><ul><li><p>When Receipt Required Flag is N, then Match Approval level is 2 way.</p></li><li><p>When Receipt Required Flag is Y and Inspection Required Flag is N, then Match Approval Level is 3 way.</p></li><li><p>When Receipt Required Flag is Y and Inspection Required Flag is Y, then Match Approval Level is 4 way.</p></li></ul><blockquote><p>2-way 不需要检测收货 receipt_required_flag 为 N</p><p>3-way 需要在 match invoice 的时候验收货 所以 receipt_required_flag 为Y , inspection_required_flag 为 N</p><p>4-way 还要检测验货 所以 两个都为 Y</p></blockquote><h3 id="SQL"><a href="#SQL" class="headerlink" title="SQL"></a>SQL</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">decode(poz_supplier_sites_v.receipt_required_flag,</span><br><span class="line">       'Y',</span><br><span class="line">       decode(poz_supplier_sites_v.inspection_required_flag,</span><br><span class="line">              'Y',</span><br><span class="line">              '4-Way',</span><br><span class="line">              'N',</span><br><span class="line">              '3-Way'),</span><br><span class="line">       'N',</span><br><span class="line">       '2-Way') AS matching_level</span><br></pre></td></tr></table></figure><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="http://j178.mtgbb.com/?p=713" target="_blank" rel="noopener">http://j178.mtgbb.com/?p=713</a></p>]]></content>
    
    <summary type="html">
    
      oracle cloud 中后台表是通过 receipt_required_flag inspection_required_flag 两个字段的关系获取 Match Approval Level 的值，po, supplier, supplier site 获取的原理同样
    
    </summary>
    
      <category term="Oracle Cloud" scheme="http://yoursite.com/categories/Oracle-Cloud/"/>
    
    
      <category term="Oracle Cloud" scheme="http://yoursite.com/tags/Oracle-Cloud/"/>
    
      <category term="Match Approval Level" scheme="http://yoursite.com/tags/Match-Approval-Level/"/>
    
  </entry>
  
  <entry>
    <title>Gitlab 更新 fork 的代码</title>
    <link href="http://yoursite.com/2019/02/18/git/gitlab-update-fork/"/>
    <id>http://yoursite.com/2019/02/18/git/gitlab-update-fork/</id>
    <published>2019-02-18T08:44:55.363Z</published>
    <updated>2019-02-18T09:02:23.724Z</updated>
    
    <content type="html"><![CDATA[<h3 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h3><ul><li>先确定是否建立了主仓库的远程数据源:</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote -v</span><br></pre></td></tr></table></figure><p><img src="/images/6.png" alt="remote_rep"></p><p>我们发现只有我们自己的两个源(fetch 和 push)，那这个时候就需要添加主仓库的源。</p><ul><li>添加主仓库的源</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add upstream URL</span><br></pre></td></tr></table></figure><blockquote><p>upstream : 随便起的名字</p><p>URL： fork的仓库地址</p><p>如果想删除remote的upstream标签，则可以运行： git remote rm upstream</p></blockquote><p><img src="/images/7.png" alt="remote_rep"></p><ul><li><p>更新代码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git fetch upstream</span><br><span class="line">git checkout master</span><br><span class="line">git merge upstream/master</span><br></pre></td></tr></table></figure></li></ul><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://blog.csdn.net/lhh1113/article/details/71038154" target="_blank" rel="noopener">https://blog.csdn.net/lhh1113/article/details/71038154</a></p>]]></content>
    
    <summary type="html">
    
      有时候我们在 gitlab fork 了某个项目的代码，然而我们需要怎么更新我们 fork 的代码呢？
    
    </summary>
    
      <category term="git" scheme="http://yoursite.com/categories/git/"/>
    
    
      <category term="git" scheme="http://yoursite.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>JSTACK 分析线程</title>
    <link href="http://yoursite.com/2019/02/11/Java/jstack-cpu/"/>
    <id>http://yoursite.com/2019/02/11/Java/jstack-cpu/</id>
    <published>2019-02-11T11:23:18.746Z</published>
    <updated>2019-02-16T06:54:52.536Z</updated>
    
    <content type="html"><![CDATA[<h3 id="查找-tomcat-线程"><a href="#查找-tomcat-线程" class="headerlink" title="查找 tomcat 线程"></a>查找 tomcat 线程</h3><p>可以通过两种方式找：</p><ul><li><p>jps</p><p>一般Bootstrap都是tomcat的</p><p><img src="/images/1.png" alt="JPS"></p></li></ul><ul><li><p>ps -ef |grep tomcat</p><p><img src="/images/2.png" alt="PS"></p></li></ul><h3 id="jstack-dump-出线程"><a href="#jstack-dump-出线程" class="headerlink" title="jstack dump 出线程"></a>jstack dump 出线程</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jstack 23524 &gt; jstack.txt</span><br></pre></td></tr></table></figure><h3 id="查看-tomcat-内部线程"><a href="#查看-tomcat-内部线程" class="headerlink" title="查看 tomcat 内部线程"></a>查看 tomcat 内部线程</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">top -H -p 23524</span><br></pre></td></tr></table></figure><blockquote><p>（shift+p 按 cpu 排序，shift+m 按内存排序） </p></blockquote><p><img src="/images/3.png" alt="tomcat-stack"></p><h3 id="将PID换算成16进制，然后在jstack-txt查找nid-0x换算后的数"><a href="#将PID换算成16进制，然后在jstack-txt查找nid-0x换算后的数" class="headerlink" title="将PID换算成16进制，然后在jstack.txt查找nid=0x换算后的数"></a>将PID换算成16进制，然后在jstack.txt查找nid=0x换算后的数</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat jstack.txt | grep 'nid=0x5be9' -B 5 -A 40</span><br></pre></td></tr></table></figure><p><img src="/images/4.png" alt="4.png"></p><blockquote><p>发现频繁的GC，推测是不是数据库在频繁的开关导致，因此检查 tomcat jndi是否没配置数据库连接池参数</p></blockquote><h3 id="加上连接池参数"><a href="#加上连接池参数" class="headerlink" title="加上连接池参数"></a>加上连接池参数</h3><p><img src="/images/5.png" alt="5.png"></p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p>jstack分析cpu负载过高原因：</p><p><a href="https://blog.csdn.net/u010248330/article/details/80080605" target="_blank" rel="noopener">https://blog.csdn.net/u010248330/article/details/80080605</a></p><p>jstack: Java占用高CPU分析之- GC Task Thread:</p><p><a href="https://blog.csdn.net/chenxiusheng/article/details/74007040" target="_blank" rel="noopener">https://blog.csdn.net/chenxiusheng/article/details/74007040</a></p>]]></content>
    
    <summary type="html">
    
      CPU 占用100%，如何根据 java 线程情况定位到问题所在
    
    </summary>
    
      <category term="Java" scheme="http://yoursite.com/categories/Java/"/>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
      <category term="Jstack" scheme="http://yoursite.com/tags/Jstack/"/>
    
  </entry>
  
  <entry>
    <title>MyBatis 传入参数为 List、Array、Map</title>
    <link href="http://yoursite.com/2019/02/08/Java/MyBatis/mybatis-collection-params/"/>
    <id>http://yoursite.com/2019/02/08/Java/MyBatis/mybatis-collection-params/</id>
    <published>2019-02-08T13:17:09.265Z</published>
    <updated>2019-02-08T14:54:52.567Z</updated>
    
    <content type="html"><![CDATA[<h3 id="foreach-标签简单介绍"><a href="#foreach-标签简单介绍" class="headerlink" title="foreach 标签简单介绍"></a>foreach 标签简单介绍</h3><p>主要用于在SQL语句中构建循环体</p><p>标签的主要属性有 <code>item</code>，<code>index</code>，<code>collection</code>，<code>open</code>，<code>separator</code>，<code>close</code>。</p><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>item</td><td>集合中每一个元素进行迭代时的别名。该参数为必选。</td></tr><tr><td>index</td><td>指定一个名字，用于表示在迭代过程中，没错迭代到的位置</td></tr><tr><td>open</td><td>表示该语句以什么开始</td></tr><tr><td>close</td><td>表示该语句以什么结束</td></tr><tr><td>separator</td><td>表示在每次进行迭代之间以什么符号作为分隔符</td></tr><tr><td>collection</td><td>属性是在使用foreach的时候最关键的也是最容易出错的，该属性是必须指定的，但是在不同情况下，该属性的值是不一样的，主要有一下3种情况： <br>(1) 如果传入的是单参数且参数类型是一个List的时候，collection属性值为list .<br>(2) 如果传入的是单参数且参数类型是一个array数组的时候，collection的属性值为array .<br>(3) 如果传入的参数是多个的时候，我们就需要把它们封装成一个Map了，当然单参数也可以封装成map，实际上如果你在传入参数的时候，在MyBatis里面也是会把它封装成一个Map的，map的key就是参数名，所以这个时候collection属性值就是传入的List或array对象在自己封装的map里面的key.<br>(4) 如果参数使用了@Param注解，那必须是参数名</td></tr></tbody></table><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><h4 id="建表语句"><a href="#建表语句" class="headerlink" title="建表语句"></a>建表语句</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`XXGL_CODE_COMBINATIONS`</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`XXGL_CODE_COMBINATIONS`</span>(</span><br><span class="line">    <span class="string">`COMBINATION_ID`</span> <span class="built_in">bigint</span> AUTO_INCREMENT <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'表ID，主键，供其他表做外键'</span> ,</span><br><span class="line">    <span class="string">`CODE_COMBINATION_ID`</span>  <span class="built_in">bigint</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> ,</span><br><span class="line">    <span class="string">`ENABLED_FLAG`</span>  <span class="built_in">varchar</span>(<span class="number">1</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'Y/N'</span> ,</span><br><span class="line">    <span class="string">`ACCOUNT_TYPE`</span>  <span class="built_in">varchar</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'账户类型'</span> ,</span><br><span class="line">    <span class="string">`SEGMENT1`</span>  <span class="built_in">varchar</span>(<span class="number">25</span>) <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'段值1'</span>,</span><br><span class="line">    <span class="string">`SEGMENT2`</span>  <span class="built_in">varchar</span>(<span class="number">25</span>) <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'段值2'</span>,</span><br><span class="line">    <span class="string">`SEGMENT3`</span>  <span class="built_in">varchar</span>(<span class="number">25</span>) <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'段值3'</span>,</span><br><span class="line">    <span class="string">`SEGMENT4`</span>  <span class="built_in">varchar</span>(<span class="number">25</span>) <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'段值4'</span>,</span><br><span class="line">    <span class="string">`SEGMENT5`</span>  <span class="built_in">varchar</span>(<span class="number">25</span>) <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'段值5'</span>,</span><br><span class="line">    <span class="string">`SEGMENT6`</span>  <span class="built_in">varchar</span>(<span class="number">25</span>) <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'段值6'</span>,</span><br><span class="line">    <span class="string">`SEGMENT7`</span>  <span class="built_in">varchar</span>(<span class="number">25</span>) <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'段值7'</span>,</span><br><span class="line">    <span class="string">`SEGMENT8`</span>  <span class="built_in">varchar</span>(<span class="number">25</span>) <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'段值8'</span>,</span><br><span class="line">    <span class="string">`SEGMENT9`</span>  <span class="built_in">varchar</span>(<span class="number">25</span>) <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'段值9'</span>,</span><br><span class="line">    <span class="string">`SEGMENT10`</span>  <span class="built_in">varchar</span>(<span class="number">25</span>) <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'段值10'</span>,</span><br><span class="line">    <span class="string">`SEGMENT11`</span>  <span class="built_in">varchar</span>(<span class="number">25</span>) <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'段值11'</span>,</span><br><span class="line">    <span class="string">`SEGMENT12`</span>  <span class="built_in">varchar</span>(<span class="number">25</span>) <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'段值12'</span>,</span><br><span class="line">    <span class="string">`SEGMENT13`</span>  <span class="built_in">varchar</span>(<span class="number">25</span>) <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'段值13'</span>,</span><br><span class="line">    <span class="string">`SEGMENT14`</span>  <span class="built_in">varchar</span>(<span class="number">25</span>) <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'段值14'</span>,</span><br><span class="line">    <span class="string">`SEGMENT15`</span>  <span class="built_in">varchar</span>(<span class="number">25</span>) <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'段值15'</span>,</span><br><span class="line">    <span class="string">`SEGMENT16`</span>  <span class="built_in">varchar</span>(<span class="number">25</span>) <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'段值16'</span>,</span><br><span class="line">    <span class="string">`SEGMENT17`</span>  <span class="built_in">varchar</span>(<span class="number">25</span>) <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'段值17'</span>,</span><br><span class="line">    <span class="string">`SEGMENT18`</span>  <span class="built_in">varchar</span>(<span class="number">25</span>) <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'段值18'</span>,</span><br><span class="line">    </span><br><span class="line">    PRIMARY <span class="keyword">KEY</span> (<span class="string">`COMBINATION_ID`</span>),</span><br><span class="line">  <span class="keyword">UNIQUE</span> <span class="keyword">KEY</span> <span class="string">`XXGL_CODE_COMBINATIONS_U1`</span> (<span class="string">`COMBINATION_ID`</span>),</span><br><span class="line">  <span class="keyword">KEY</span> <span class="string">`XXGL_CODE_COMBINATIONS_N1`</span> (<span class="string">`CODE_COMBINATION_ID`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> AUTO_INCREMENT=<span class="number">1000</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</span><br></pre></td></tr></table></figure><h4 id="测试数据"><a href="#测试数据" class="headerlink" title="测试数据"></a>测试数据</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`XXGL_CODE_COMBINATIONS`</span> (</span><br><span class="line"><span class="string">`CODE_COMBINATION_ID`</span>,</span><br><span class="line"><span class="string">`ENABLED_FLAG`</span>,</span><br><span class="line"><span class="string">`ACCOUNT_TYPE`</span>,</span><br><span class="line"><span class="string">`SEGMENT1`</span>,</span><br><span class="line"><span class="string">`SEGMENT2`</span>,</span><br><span class="line"><span class="string">`SEGMENT3`</span>,</span><br><span class="line"><span class="string">`SEGMENT4`</span>,</span><br><span class="line"><span class="string">`SEGMENT5`</span>,</span><br><span class="line"><span class="string">`SEGMENT6`</span>,</span><br><span class="line"><span class="string">`SEGMENT7`</span>,</span><br><span class="line"><span class="string">`SEGMENT8`</span>,</span><br><span class="line"><span class="string">`SEGMENT9`</span>,</span><br><span class="line"><span class="string">`SEGMENT10`</span>,</span><br><span class="line"><span class="string">`SEGMENT11`</span>,</span><br><span class="line"><span class="string">`SEGMENT12`</span>,</span><br><span class="line"><span class="string">`SEGMENT13`</span>,</span><br><span class="line"><span class="string">`SEGMENT14`</span>,</span><br><span class="line"><span class="string">`SEGMENT15`</span>,</span><br><span class="line"><span class="string">`SEGMENT16`</span>,</span><br><span class="line"><span class="string">`SEGMENT17`</span>,</span><br><span class="line"><span class="string">`SEGMENT18`</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">(</span><br><span class="line"><span class="number">300000003238305</span>,</span><br><span class="line"><span class="string">'Y'</span>,</span><br><span class="line"><span class="string">'E'</span>,</span><br><span class="line"><span class="string">'050'</span>,</span><br><span class="line"><span class="string">'0'</span>,</span><br><span class="line"><span class="string">'71205'</span>,</span><br><span class="line"><span class="string">'S101005'</span>,</span><br><span class="line"><span class="string">'50010'</span>,</span><br><span class="line"><span class="string">'1101'</span>,</span><br><span class="line"><span class="string">'I101'</span>,</span><br><span class="line"><span class="string">'0'</span>,</span><br><span class="line"><span class="string">'0'</span>,</span><br><span class="line"><span class="string">'0'</span>,</span><br><span class="line"><span class="string">'0'</span>,</span><br><span class="line"><span class="string">'0'</span>,</span><br><span class="line"><span class="literal">NULL</span>,</span><br><span class="line"><span class="literal">NULL</span>,</span><br><span class="line"><span class="literal">NULL</span>,</span><br><span class="line"><span class="literal">NULL</span>,</span><br><span class="line"><span class="literal">NULL</span>,</span><br><span class="line"><span class="literal">NULL</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h4 id="实体类（CodeCombinations-java）"><a href="#实体类（CodeCombinations-java）" class="headerlink" title="实体类（CodeCombinations.java）"></a>实体类（CodeCombinations.java）</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.persistence.GeneratedValue;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.Id;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.validator.constraints.Length;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.Table;</span><br><span class="line"><span class="keyword">import</span> javax.validation.constraints.NotNull;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by xiaofeng.he on 2018/03/08</span></span><br><span class="line"><span class="comment"> * 帐号组合DTO</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Table</span>(name = <span class="string">"XXGL_CODE_COMBINATIONS"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CodeCombinations</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@GeneratedValue</span></span><br><span class="line">    <span class="keyword">private</span> Long combinationId; <span class="comment">// 表ID，主键，供其他表做外键</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@NotNull</span></span><br><span class="line">    <span class="keyword">private</span> Long codeCombinationId; <span class="comment">// ERP中CODE_COMBINATION_ID</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String accountType;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String enabledFlag;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Length</span>(max = <span class="number">25</span>)</span><br><span class="line">    <span class="keyword">private</span> String segment1;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Length</span>(max = <span class="number">25</span>)</span><br><span class="line">    <span class="keyword">private</span> String segment2;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Length</span>(max = <span class="number">25</span>)</span><br><span class="line">    <span class="keyword">private</span> String segment3;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Length</span>(max = <span class="number">25</span>)</span><br><span class="line">    <span class="keyword">private</span> String segment4;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Length</span>(max = <span class="number">25</span>)</span><br><span class="line">    <span class="keyword">private</span> String segment5;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Length</span>(max = <span class="number">25</span>)</span><br><span class="line">    <span class="keyword">private</span> String segment6;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Length</span>(max = <span class="number">25</span>)</span><br><span class="line">    <span class="keyword">private</span> String segment7;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Length</span>(max = <span class="number">25</span>)</span><br><span class="line">    <span class="keyword">private</span> String segment8;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Length</span>(max = <span class="number">25</span>)</span><br><span class="line">    <span class="keyword">private</span> String segment9;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Length</span>(max = <span class="number">25</span>)</span><br><span class="line">    <span class="keyword">private</span> String segment10;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Length</span>(max = <span class="number">25</span>)</span><br><span class="line">    <span class="keyword">private</span> String segment11;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Length</span>(max = <span class="number">25</span>)</span><br><span class="line">    <span class="keyword">private</span> String segment12;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Length</span>(max = <span class="number">25</span>)</span><br><span class="line">    <span class="keyword">private</span> String segment13;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Length</span>(max = <span class="number">25</span>)</span><br><span class="line">    <span class="keyword">private</span> String segment14;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Length</span>(max = <span class="number">25</span>)</span><br><span class="line">    <span class="keyword">private</span> String segment15;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Length</span>(max = <span class="number">25</span>)</span><br><span class="line">    <span class="keyword">private</span> String segment16;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Length</span>(max = <span class="number">25</span>)</span><br><span class="line">    <span class="keyword">private</span> String segment17;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Length</span>(max = <span class="number">25</span>)</span><br><span class="line">    <span class="keyword">private</span> String segment18;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// getter setter...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="java-mapper"><a href="#java-mapper" class="headerlink" title="java mapper"></a>java mapper</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Param;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by xiaofeng.he on 2018/03/08</span></span><br><span class="line"><span class="comment"> * 账户组合mapper</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">CodeCombinationsMapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据多个 segment value 查询唯一</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> segmentValues</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">CodeCombinations <span class="title">selectOneBySegmentArray</span><span class="params">(@Param(<span class="string">"segmentValues"</span>)</span> String[] segmentValues)</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据多个 segment value 查询唯一</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> segmentValues</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">CodeCombinations <span class="title">selectOneBySegmentList</span><span class="params">(List&lt;String&gt; segmentValues)</span></span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据多个 segment value 查询唯一</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> params</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">CodeCombinations <span class="title">selectOneBySegmentMap</span><span class="params">(Map&lt;String, Object&gt; params)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="xml-mapper"><a href="#xml-mapper" class="headerlink" title="xml mapper"></a>xml mapper</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"xxx.mapper.CodeCombinationsMapper"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"BaseResultMap"</span> <span class="attr">type</span>=<span class="string">"xxx.dto.CodeCombinations"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"COMBINATION_ID"</span> <span class="attr">property</span>=<span class="string">"combinationId"</span> <span class="attr">jdbcType</span>=<span class="string">"DECIMAL"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"CODE_COMBINATION_ID"</span> <span class="attr">property</span>=<span class="string">"codeCombinationId"</span> <span class="attr">jdbcType</span>=<span class="string">"DECIMAL"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"ACCOUNT_TYPE"</span> <span class="attr">property</span>=<span class="string">"accountType"</span> <span class="attr">jdbcType</span>=<span class="string">"VARCHAR"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"ENABLED_FLAG"</span> <span class="attr">property</span>=<span class="string">"enabledFlag"</span> <span class="attr">jdbcType</span>=<span class="string">"VARCHAR"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"SEGMENT1"</span> <span class="attr">property</span>=<span class="string">"segment1"</span> <span class="attr">jdbcType</span>=<span class="string">"VARCHAR"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"SEGMENT2"</span> <span class="attr">property</span>=<span class="string">"segment2"</span> <span class="attr">jdbcType</span>=<span class="string">"VARCHAR"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"SEGMENT3"</span> <span class="attr">property</span>=<span class="string">"segment3"</span> <span class="attr">jdbcType</span>=<span class="string">"VARCHAR"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"SEGMENT4"</span> <span class="attr">property</span>=<span class="string">"segment4"</span> <span class="attr">jdbcType</span>=<span class="string">"VARCHAR"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"SEGMENT5"</span> <span class="attr">property</span>=<span class="string">"segment5"</span> <span class="attr">jdbcType</span>=<span class="string">"VARCHAR"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"SEGMENT6"</span> <span class="attr">property</span>=<span class="string">"segment6"</span> <span class="attr">jdbcType</span>=<span class="string">"VARCHAR"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"SEGMENT7"</span> <span class="attr">property</span>=<span class="string">"segment7"</span> <span class="attr">jdbcType</span>=<span class="string">"VARCHAR"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"SEGMENT8"</span> <span class="attr">property</span>=<span class="string">"segment8"</span> <span class="attr">jdbcType</span>=<span class="string">"VARCHAR"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"SEGMENT9"</span> <span class="attr">property</span>=<span class="string">"segment9"</span> <span class="attr">jdbcType</span>=<span class="string">"VARCHAR"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"SEGMENT10"</span> <span class="attr">property</span>=<span class="string">"segment10"</span> <span class="attr">jdbcType</span>=<span class="string">"VARCHAR"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"SEGMENT11"</span> <span class="attr">property</span>=<span class="string">"segment11"</span> <span class="attr">jdbcType</span>=<span class="string">"VARCHAR"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"SEGMENT12"</span> <span class="attr">property</span>=<span class="string">"segment12"</span> <span class="attr">jdbcType</span>=<span class="string">"VARCHAR"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"SEGMENT13"</span> <span class="attr">property</span>=<span class="string">"segment13"</span> <span class="attr">jdbcType</span>=<span class="string">"VARCHAR"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"SEGMENT14"</span> <span class="attr">property</span>=<span class="string">"segment14"</span> <span class="attr">jdbcType</span>=<span class="string">"VARCHAR"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"SEGMENT15"</span> <span class="attr">property</span>=<span class="string">"segment15"</span> <span class="attr">jdbcType</span>=<span class="string">"VARCHAR"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"SEGMENT16"</span> <span class="attr">property</span>=<span class="string">"segment16"</span> <span class="attr">jdbcType</span>=<span class="string">"VARCHAR"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"SEGMENT17"</span> <span class="attr">property</span>=<span class="string">"segment17"</span> <span class="attr">jdbcType</span>=<span class="string">"VARCHAR"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"SEGMENT18"</span> <span class="attr">property</span>=<span class="string">"segment18"</span> <span class="attr">jdbcType</span>=<span class="string">"VARCHAR"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">&lt;!--Array:forech 中的 collection 属性类型是 Array, collection 的值必须是:array, item 的值可以随意, mapper 接口中参数名字随意 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selectOneBySegmentArray"</span> <span class="attr">resultMap</span>=<span class="string">"BaseResultMap"</span>&gt;</span></span><br><span class="line">        select c.* from XXGL_CODE_COMBINATIONS c</span><br><span class="line">        <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">            and c.ENABLED_FLAG = 'Y'</span><br><span class="line">            <span class="tag">&lt;<span class="name">choose</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">"segmentValues"</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!-- 使用了@Param 后collection不能填array，要填写别名 --&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">"segmentValues"</span> <span class="attr">item</span>=<span class="string">"segmentValue"</span> <span class="attr">index</span>=<span class="string">"index"</span>&gt;</span></span><br><span class="line">                        and c.SEGMENT$&#123;index+1&#125; = #&#123;segmentValue&#125;</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">otherwise</span>&gt;</span></span><br><span class="line">                    and 1=2</span><br><span class="line">                <span class="tag">&lt;/<span class="name">otherwise</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">choose</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!--List:forech 中的 collection 属性类型是 List, collection 的值必须是:list, item 的值可以随意, mapper 接口中参数名字随意 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selectOneBySegmentList"</span> <span class="attr">resultMap</span>=<span class="string">"BaseResultMap"</span>&gt;</span></span><br><span class="line">        select c.* from XXGL_CODE_COMBINATIONS c</span><br><span class="line">        <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">            and c.ENABLED_FLAG = 'Y'</span><br><span class="line">            <span class="tag">&lt;<span class="name">choose</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">"list"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">"list"</span> <span class="attr">item</span>=<span class="string">"segmentValue"</span> <span class="attr">index</span>=<span class="string">"index"</span>&gt;</span></span><br><span class="line">                        and c.SEGMENT$&#123;index+1&#125; = #&#123;segmentValue&#125;</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">otherwise</span>&gt;</span></span><br><span class="line">                    and 1=2</span><br><span class="line">                <span class="tag">&lt;/<span class="name">otherwise</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">choose</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!--Map:不单单 forech 中的 collection 属性是 map.key,其它所有属性都是 map.key, 比如下面的 enabledFlag --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selectOneBySegmentMap"</span> <span class="attr">resultMap</span>=<span class="string">"BaseResultMap"</span>&gt;</span></span><br><span class="line">        select c.* from XXGL_CODE_COMBINATIONS c</span><br><span class="line">        <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">            and c.ENABLED_FLAG = #&#123;enabledFlag&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">choose</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">"segmentArray"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">"segmentArray"</span> <span class="attr">item</span>=<span class="string">"segmentValue"</span> <span class="attr">index</span>=<span class="string">"index"</span>&gt;</span></span><br><span class="line">                        and c.SEGMENT$&#123;index+1&#125; = #&#123;segmentValue&#125;</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">otherwise</span>&gt;</span></span><br><span class="line">                    and 1=2</span><br><span class="line">                <span class="tag">&lt;/<span class="name">otherwise</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">choose</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">choose</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">"segmentList"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">"segmentList"</span> <span class="attr">item</span>=<span class="string">"segmentValue"</span> <span class="attr">index</span>=<span class="string">"index"</span>&gt;</span></span><br><span class="line">                        /* 2 */</span><br><span class="line">                        and c.SEGMENT$&#123;index+1&#125; = #&#123;segmentValue&#125;</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">otherwise</span>&gt;</span></span><br><span class="line">                    and 1=2</span><br><span class="line">                <span class="tag">&lt;/<span class="name">otherwise</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">choose</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="测试-controller"><a href="#测试-controller" class="headerlink" title="测试 controller"></a>测试 controller</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> xxx.dto.CodeCombinations;</span><br><span class="line"><span class="keyword">import</span> xxx.mapper.CodeCombinationsMapper;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> CodeCombinationsMapper codeCombinationsMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/test/code/combination/selectBySegments"</span>)</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;CodeCombinations&gt; <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String[] a = &#123;<span class="string">"050"</span>, <span class="string">"0"</span>, <span class="string">"71205"</span>, <span class="string">"S101005"</span>, <span class="string">"50010"</span>, <span class="string">"1101"</span>, <span class="string">"I101"</span>&#125;;</span><br><span class="line"></span><br><span class="line">        CodeCombinations codeCombinations1 = codeCombinationsMapper.selectOneBySegments(a);</span><br><span class="line">        CodeCombinations codeCombinations2 = codeCombinationsMapper.selectOneBySegmentList(Arrays.asList(a));</span><br><span class="line">        Map&lt;String, Object&gt; params = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        params.put(<span class="string">"enabledFlag"</span>, <span class="string">"Y"</span>);</span><br><span class="line">        params.put(<span class="string">"segmentArray"</span>, a);</span><br><span class="line">        params.put(<span class="string">"segmentList"</span>, Arrays.asList(a));</span><br><span class="line">        CodeCombinations codeCombinations3 = codeCombinationsMapper.selectOneBySegmentMap(params);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> Arrays.asList(codeCombinations1, codeCombinations2, codeCombinations3);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="测试结果"><a href="#测试结果" class="headerlink" title="测试结果"></a>测试结果</h4><p><strong>log</strong></p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2019</span>-<span class="number">02</span>-<span class="number">08</span> <span class="number">22</span>:<span class="number">40</span>:<span class="number">40</span><span class="variable">.523</span> DEBUG [<span class="number">10001</span>] [e5c47fa7c79b461a806c2d6135d485c2] xxx<span class="variable">.mapper</span><span class="variable">.CodeCombinationsMapper</span><span class="variable">.selectOneBySegments</span> - ==&gt;  Preparing: select c.* from XXGL_CODE_COMBINATIONS c WHERE c<span class="variable">.ENABLED_FLAG</span> = 'Y' <span class="keyword">and</span> c<span class="variable">.SEGMENT1</span> = ? <span class="keyword">and</span> c<span class="variable">.SEGMENT2</span> = ? <span class="keyword">and</span> c<span class="variable">.SEGMENT3</span> = ? <span class="keyword">and</span> c<span class="variable">.SEGMENT4</span> = ? <span class="keyword">and</span> c<span class="variable">.SEGMENT5</span> = ? <span class="keyword">and</span> c<span class="variable">.SEGMENT6</span> = ? <span class="keyword">and</span> c<span class="variable">.SEGMENT7</span> = ? </span><br><span class="line"><span class="number">2019</span>-<span class="number">02</span>-<span class="number">08</span> <span class="number">22</span>:<span class="number">40</span>:<span class="number">40</span><span class="variable">.524</span> DEBUG [<span class="number">10001</span>] [e5c47fa7c79b461a806c2d6135d485c2] xxx<span class="variable">.mapper</span><span class="variable">.CodeCombinationsMapper</span><span class="variable">.selectOneBySegments</span> - ==&gt; Parameters: <span class="number">050</span>(String), <span class="number">0</span>(String), <span class="number">71205</span>(String), S101005(String), <span class="number">50010</span>(String), <span class="number">1101</span>(String), I101(String)</span><br><span class="line"><span class="number">2019</span>-<span class="number">02</span>-<span class="number">08</span> <span class="number">22</span>:<span class="number">40</span>:<span class="number">40</span><span class="variable">.532</span> DEBUG [<span class="number">10001</span>] [e5c47fa7c79b461a806c2d6135d485c2] xxx<span class="variable">.mapper</span><span class="variable">.CodeCombinationsMapper</span><span class="variable">.selectOneBySegments</span> - &lt;==      Total: <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="number">2019</span>-<span class="number">02</span>-<span class="number">08</span> <span class="number">22</span>:<span class="number">40</span>:<span class="number">43</span><span class="variable">.259</span> DEBUG [<span class="number">10001</span>] [e5c47fa7c79b461a806c2d6135d485c2] xxx<span class="variable">.mapper</span><span class="variable">.CodeCombinationsMapper</span><span class="variable">.selectOneBySegmentList</span> - ==&gt;  Preparing: select c.* from XXGL_CODE_COMBINATIONS c WHERE c<span class="variable">.ENABLED_FLAG</span> = 'Y' <span class="keyword">and</span> c<span class="variable">.SEGMENT1</span> = ? <span class="keyword">and</span> c<span class="variable">.SEGMENT2</span> = ? <span class="keyword">and</span> c<span class="variable">.SEGMENT3</span> = ? <span class="keyword">and</span> c<span class="variable">.SEGMENT4</span> = ? <span class="keyword">and</span> c<span class="variable">.SEGMENT5</span> = ? <span class="keyword">and</span> c<span class="variable">.SEGMENT6</span> = ? <span class="keyword">and</span> c<span class="variable">.SEGMENT7</span> = ? </span><br><span class="line"><span class="number">2019</span>-<span class="number">02</span>-<span class="number">08</span> <span class="number">22</span>:<span class="number">40</span>:<span class="number">43</span><span class="variable">.259</span> DEBUG [<span class="number">10001</span>] [e5c47fa7c79b461a806c2d6135d485c2] xxx<span class="variable">.mapper</span><span class="variable">.CodeCombinationsMapper</span><span class="variable">.selectOneBySegmentList</span> - ==&gt; Parameters: <span class="number">050</span>(String), <span class="number">0</span>(String), <span class="number">71205</span>(String), S101005(String), <span class="number">50010</span>(String), <span class="number">1101</span>(String), I101(String)</span><br><span class="line"><span class="number">2019</span>-<span class="number">02</span>-<span class="number">08</span> <span class="number">22</span>:<span class="number">40</span>:<span class="number">43</span><span class="variable">.263</span> DEBUG [<span class="number">10001</span>] [e5c47fa7c79b461a806c2d6135d485c2] xxx<span class="variable">.mapper</span><span class="variable">.CodeCombinationsMapper</span><span class="variable">.selectOneBySegmentList</span> - &lt;==      Total: <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="number">2019</span>-<span class="number">02</span>-<span class="number">08</span> <span class="number">22</span>:<span class="number">40</span>:<span class="number">44</span><span class="variable">.284</span> DEBUG [<span class="number">10001</span>] [e5c47fa7c79b461a806c2d6135d485c2] xxx<span class="variable">.mapper</span><span class="variable">.CodeCombinationsMapper</span><span class="variable">.selectOneBySegmentMap</span> - ==&gt;  Preparing: select c.* from XXGL_CODE_COMBINATIONS c WHERE c<span class="variable">.ENABLED_FLAG</span> = ? <span class="keyword">and</span> c<span class="variable">.SEGMENT1</span> = ? <span class="keyword">and</span> c<span class="variable">.SEGMENT2</span> = ? <span class="keyword">and</span> c<span class="variable">.SEGMENT3</span> = ? <span class="keyword">and</span> c<span class="variable">.SEGMENT4</span> = ? <span class="keyword">and</span> c<span class="variable">.SEGMENT5</span> = ? <span class="keyword">and</span> c<span class="variable">.SEGMENT6</span> = ? <span class="keyword">and</span> c<span class="variable">.SEGMENT7</span> = ? <span class="comment">/* 2 */</span> <span class="keyword">and</span> c<span class="variable">.SEGMENT1</span> = ? <span class="comment">/* 2 */</span> <span class="keyword">and</span> c<span class="variable">.SEGMENT2</span> = ? <span class="comment">/* 2 */</span> <span class="keyword">and</span> c<span class="variable">.SEGMENT3</span> = ? <span class="comment">/* 2 */</span> <span class="keyword">and</span> c<span class="variable">.SEGMENT4</span> = ? <span class="comment">/* 2 */</span> <span class="keyword">and</span> c<span class="variable">.SEGMENT5</span> = ? <span class="comment">/* 2 */</span> <span class="keyword">and</span> c<span class="variable">.SEGMENT6</span> = ? <span class="comment">/* 2 */</span> <span class="keyword">and</span> c<span class="variable">.SEGMENT7</span> = ? </span><br><span class="line"><span class="number">2019</span>-<span class="number">02</span>-<span class="number">08</span> <span class="number">22</span>:<span class="number">40</span>:<span class="number">44</span><span class="variable">.284</span> DEBUG [<span class="number">10001</span>] [e5c47fa7c79b461a806c2d6135d485c2] xxx<span class="variable">.mapper</span><span class="variable">.CodeCombinationsMapper</span><span class="variable">.selectOneBySegmentMap</span> - ==&gt; Parameters: Y(String), <span class="number">050</span>(String), <span class="number">0</span>(String), <span class="number">71205</span>(String), S101005(String), <span class="number">50010</span>(String), <span class="number">1101</span>(String), I101(String), <span class="number">050</span>(String), <span class="number">0</span>(String), <span class="number">71205</span>(String), S101005(String), <span class="number">50010</span>(String), <span class="number">1101</span>(String), I101(String)</span><br><span class="line"><span class="number">2019</span>-<span class="number">02</span>-<span class="number">08</span> <span class="number">22</span>:<span class="number">40</span>:<span class="number">44</span><span class="variable">.289</span> DEBUG [<span class="number">10001</span>] [e5c47fa7c79b461a806c2d6135d485c2] xxx<span class="variable">.mapper</span><span class="variable">.CodeCombinationsMapper</span><span class="variable">.selectOneBySegmentMap</span> - &lt;==      Total: <span class="number">1</span></span><br></pre></td></tr></table></figure><p><strong>json</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">&#123;</span><br><span class="line"><span class="attr">"combinationId"</span>: <span class="number">1000</span>,</span><br><span class="line"><span class="attr">"codeCombinationId"</span>: <span class="number">300000003238305</span>,</span><br><span class="line"><span class="attr">"accountType"</span>: <span class="string">"E"</span>,</span><br><span class="line"><span class="attr">"enabledFlag"</span>: <span class="string">"Y"</span>,</span><br><span class="line"><span class="attr">"segment1"</span>: <span class="string">"050"</span>,</span><br><span class="line"><span class="attr">"segment2"</span>: <span class="string">"0"</span>,</span><br><span class="line"><span class="attr">"segment3"</span>: <span class="string">"71205"</span>,</span><br><span class="line"><span class="attr">"segment4"</span>: <span class="string">"S101005"</span>,</span><br><span class="line"><span class="attr">"segment5"</span>: <span class="string">"50010"</span>,</span><br><span class="line"><span class="attr">"segment6"</span>: <span class="string">"1101"</span>,</span><br><span class="line"><span class="attr">"segment7"</span>: <span class="string">"I101"</span>,</span><br><span class="line"><span class="attr">"segment8"</span>: <span class="string">"0"</span>,</span><br><span class="line"><span class="attr">"segment9"</span>: <span class="string">"0"</span>,</span><br><span class="line"><span class="attr">"segment10"</span>: <span class="string">"0"</span>,</span><br><span class="line"><span class="attr">"segment11"</span>: <span class="string">"0"</span>,</span><br><span class="line"><span class="attr">"segment12"</span>: <span class="string">"0"</span>,</span><br><span class="line"><span class="attr">"segment13"</span>: <span class="literal">null</span>,</span><br><span class="line"><span class="attr">"segment14"</span>: <span class="literal">null</span>,</span><br><span class="line"><span class="attr">"segment15"</span>: <span class="literal">null</span>,</span><br><span class="line"><span class="attr">"segment16"</span>: <span class="literal">null</span>,</span><br><span class="line"><span class="attr">"segment17"</span>: <span class="literal">null</span>,</span><br><span class="line"><span class="attr">"segment18"</span>: <span class="literal">null</span></span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line"><span class="attr">"combinationId"</span>: <span class="number">1000</span>,</span><br><span class="line"><span class="attr">"codeCombinationId"</span>: <span class="number">300000003238305</span>,</span><br><span class="line"><span class="attr">"accountType"</span>: <span class="string">"E"</span>,</span><br><span class="line"><span class="attr">"enabledFlag"</span>: <span class="string">"Y"</span>,</span><br><span class="line"><span class="attr">"segment1"</span>: <span class="string">"050"</span>,</span><br><span class="line"><span class="attr">"segment2"</span>: <span class="string">"0"</span>,</span><br><span class="line"><span class="attr">"segment3"</span>: <span class="string">"71205"</span>,</span><br><span class="line"><span class="attr">"segment4"</span>: <span class="string">"S101005"</span>,</span><br><span class="line"><span class="attr">"segment5"</span>: <span class="string">"50010"</span>,</span><br><span class="line"><span class="attr">"segment6"</span>: <span class="string">"1101"</span>,</span><br><span class="line"><span class="attr">"segment7"</span>: <span class="string">"I101"</span>,</span><br><span class="line"><span class="attr">"segment8"</span>: <span class="string">"0"</span>,</span><br><span class="line"><span class="attr">"segment9"</span>: <span class="string">"0"</span>,</span><br><span class="line"><span class="attr">"segment10"</span>: <span class="string">"0"</span>,</span><br><span class="line"><span class="attr">"segment11"</span>: <span class="string">"0"</span>,</span><br><span class="line"><span class="attr">"segment12"</span>: <span class="string">"0"</span>,</span><br><span class="line"><span class="attr">"segment13"</span>: <span class="literal">null</span>,</span><br><span class="line"><span class="attr">"segment14"</span>: <span class="literal">null</span>,</span><br><span class="line"><span class="attr">"segment15"</span>: <span class="literal">null</span>,</span><br><span class="line"><span class="attr">"segment16"</span>: <span class="literal">null</span>,</span><br><span class="line"><span class="attr">"segment17"</span>: <span class="literal">null</span>,</span><br><span class="line"><span class="attr">"segment18"</span>: <span class="literal">null</span></span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line"><span class="attr">"combinationId"</span>: <span class="number">1000</span>,</span><br><span class="line"><span class="attr">"codeCombinationId"</span>: <span class="number">300000003238305</span>,</span><br><span class="line"><span class="attr">"accountType"</span>: <span class="string">"E"</span>,</span><br><span class="line"><span class="attr">"enabledFlag"</span>: <span class="string">"Y"</span>,</span><br><span class="line"><span class="attr">"segment1"</span>: <span class="string">"050"</span>,</span><br><span class="line"><span class="attr">"segment2"</span>: <span class="string">"0"</span>,</span><br><span class="line"><span class="attr">"segment3"</span>: <span class="string">"71205"</span>,</span><br><span class="line"><span class="attr">"segment4"</span>: <span class="string">"S101005"</span>,</span><br><span class="line"><span class="attr">"segment5"</span>: <span class="string">"50010"</span>,</span><br><span class="line"><span class="attr">"segment6"</span>: <span class="string">"1101"</span>,</span><br><span class="line"><span class="attr">"segment7"</span>: <span class="string">"I101"</span>,</span><br><span class="line"><span class="attr">"segment8"</span>: <span class="string">"0"</span>,</span><br><span class="line"><span class="attr">"segment9"</span>: <span class="string">"0"</span>,</span><br><span class="line"><span class="attr">"segment10"</span>: <span class="string">"0"</span>,</span><br><span class="line"><span class="attr">"segment11"</span>: <span class="string">"0"</span>,</span><br><span class="line"><span class="attr">"segment12"</span>: <span class="string">"0"</span>,</span><br><span class="line"><span class="attr">"segment13"</span>: <span class="literal">null</span>,</span><br><span class="line"><span class="attr">"segment14"</span>: <span class="literal">null</span>,</span><br><span class="line"><span class="attr">"segment15"</span>: <span class="literal">null</span>,</span><br><span class="line"><span class="attr">"segment16"</span>: <span class="literal">null</span>,</span><br><span class="line"><span class="attr">"segment17"</span>: <span class="literal">null</span>,</span><br><span class="line"><span class="attr">"segment18"</span>: <span class="literal">null</span></span><br><span class="line">&#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h3 id="感谢"><a href="#感谢" class="headerlink" title="感谢"></a>感谢</h3><p><a href="https://blog.csdn.net/s592652578/article/details/52871884" target="_blank" rel="noopener">https://blog.csdn.net/s592652578/article/details/52871884</a></p>]]></content>
    
    <summary type="html">
    
      MyBatis 传入参数为 List、Array、Map
    
    </summary>
    
      <category term="Java" scheme="http://yoursite.com/categories/Java/"/>
    
      <category term="MyBatis" scheme="http://yoursite.com/categories/Java/MyBatis/"/>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
      <category term="MyBatis" scheme="http://yoursite.com/tags/MyBatis/"/>
    
  </entry>
  
  <entry>
    <title>航天信息金税盘接口 js 调用</title>
    <link href="http://yoursite.com/2018/12/02/essay/gold-tax-js/"/>
    <id>http://yoursite.com/2018/12/02/essay/gold-tax-js/</id>
    <published>2018-12-02T14:28:42.420Z</published>
    <updated>2019-02-08T13:13:45.251Z</updated>
    
    <content type="html"><![CDATA[<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><blockquote><p>最近项目要求与单机版的金税盘接口进行对接，在这里简单记录一下自己的开发经验，希望可以帮助到有需要的人</p><p>PS：接口使用 <code>js</code> 对接，仅支持 <code>ie</code> 浏览器。</p></blockquote><h3 id="前置条件"><a href="#前置条件" class="headerlink" title="前置条件"></a>前置条件</h3><p>在进行开发时候需要有一些前置条件</p><ol><li><p><code>ie</code> 浏览器</p><ul><li><p>开启 <code>activeX</code> 控件</p><p>设置 –&gt; Internet 选项 –&gt; 安全 –&gt; 自定义级别</p><p>把 <code>activeX</code> 相关设置勾上</p><p>可参考: </p></li><li><p>管理员身份运行调试</p><p>如果开票软件安装到本地 <code>C盘</code> 需要使用管理员打开 <code>ie</code> 浏览器，然后再进行调试</p></li></ul></li><li><p>金税盘安装</p><ul><li>要确保金税盘安装准确安装了<code>TaxCardX.dll</code></li></ul></li></ol><h3 id="通用-js代码"><a href="#通用-js代码" class="headerlink" title="通用 js代码"></a>通用 <code>js</code>代码</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** 航信金税盘相关function */</span></span><br><span class="line"><span class="keyword">var</span> goldTax = &#123;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 使用前先判断是否是ie浏览器</span></span><br><span class="line"><span class="comment"> * @return true/false</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">isIE: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!!<span class="built_in">window</span>.ActiveXObject || <span class="string">"ActiveXObject"</span> <span class="keyword">in</span> <span class="built_in">window</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;,</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 开启金税盘</span></span><br><span class="line"><span class="comment"> * @param certPassword 单机版为证书口令  服务器版为地址 留空则读取开票BIN文件下cert.txt</span></span><br><span class="line"><span class="comment"> * @return </span></span><br><span class="line"><span class="comment"> * &lt;pre&gt;</span></span><br><span class="line"><span class="comment"> *     &#123;</span></span><br><span class="line"><span class="comment"> *        'success': true/false, // 成功或者失败</span></span><br><span class="line"><span class="comment"> *        'code': -1/其他, // 错误码，-1 为系统错误</span></span><br><span class="line"><span class="comment"> *        'msg': 'xxx', // 错误信息</span></span><br><span class="line"><span class="comment"> *        'data': &#123;&#125; // 接口返回相关数据</span></span><br><span class="line"><span class="comment"> *     &#125;</span></span><br><span class="line"><span class="comment"> * &lt;/pre&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">openCard: <span class="function"><span class="keyword">function</span> (<span class="params">certPassword</span>) </span>&#123;</span><br><span class="line"><span class="keyword">var</span> result = &#123;</span><br><span class="line"><span class="string">'success'</span>: <span class="literal">false</span>,</span><br><span class="line"><span class="string">'code'</span>: <span class="number">-1</span>,</span><br><span class="line"><span class="string">'msg'</span>: <span class="string">''</span>,</span><br><span class="line"><span class="string">'data'</span>: &#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            goldTax.card = <span class="keyword">new</span> ActiveXObject(<span class="string">"TaxCardX.GoldTax"</span>);</span><br><span class="line">            <span class="comment">// 单机版为证书口令  服务器版为地址 留空则读取开票BIN文件下cert.txt</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">typeof</span> certPassword != <span class="string">'undefined'</span>) &#123;</span><br><span class="line">            goldTax.card.CertPassword = certPassword;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 开启金税盘</span></span><br><span class="line">            goldTax.card.OpenCard();</span><br><span class="line">            result.code = goldTax.card.RetCode;</span><br><span class="line">            result.msg = goldTax.card.RetMsg;</span><br><span class="line">            <span class="comment">// 1011 开启成功</span></span><br><span class="line">            <span class="keyword">if</span> (result.code == <span class="number">1011</span>) &#123;</span><br><span class="line">            result.success = <span class="literal">true</span>;</span><br><span class="line">            result.data = &#123;</span><br><span class="line">            RetCode: goldTax.card.RetCode, <span class="comment">/* RetCode - 状态码， 1011 开启成功 */</span></span><br><span class="line">            RetMsg: goldTax.card.RetMsg, <span class="comment">/* RetMsg 状态信息 */</span></span><br><span class="line">            InvLimit: goldTax.card.InvLimit, <span class="comment">/* InvLimit – 开票限额, 金税卡发票开具价税合计限额 */</span></span><br><span class="line">            TaxCode: goldTax.card.TaxCode, <span class="comment">/* TaxCode 本单位税号 */</span></span><br><span class="line">            TaxClock: goldTax.card.TaxClock, <span class="comment">/* TaxClock – 金税卡时钟 */</span></span><br><span class="line">            MachineNo: goldTax.card.MachineNo, <span class="comment">/* MachineNo – 开票机号码，主开票机为 0 */</span></span><br><span class="line">            IsInvEmpty: goldTax.card.IsInvEmpty, <span class="comment">/* IsInvEmpty – 有票标志，0为金税卡中无可开发票，1为有票 */</span></span><br><span class="line">            IsRepReached: goldTax.card.IsRepReached, <span class="comment">/* IsRepReached – 抄税标志，0为未到抄税期，1为已到抄税期 */</span></span><br><span class="line">            IsLockReached: goldTax.card.IsLockReached, <span class="comment">/* IsLockReached – 锁死标志，0为未到锁死期，1为已到锁死期 */</span></span><br><span class="line">            &#125;;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            result.success = <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">            result.success = <span class="literal">false</span>;</span><br><span class="line">            result.code = <span class="number">-1</span>;</span><br><span class="line">            result.msg = <span class="string">'ActiveX Error, '</span> + e.description;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 关闭金税盘</span></span><br><span class="line"><span class="comment">     * @return</span></span><br><span class="line"><span class="comment">     * &lt;pre&gt;</span></span><br><span class="line"><span class="comment"> *     &#123;</span></span><br><span class="line"><span class="comment"> *        'success': true/false, // 成功或者失败</span></span><br><span class="line"><span class="comment"> *        'code': -1/其他, // 错误码，-1 为系统错误</span></span><br><span class="line"><span class="comment"> *        'msg': 'xxx' // 错误信息</span></span><br><span class="line"><span class="comment"> *     &#125;</span></span><br><span class="line"><span class="comment"> * &lt;/pre&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    closeCard: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> result = &#123;</span><br><span class="line"><span class="string">'success'</span>: <span class="literal">false</span>,</span><br><span class="line"><span class="string">'code'</span>: <span class="number">-1</span>,</span><br><span class="line"><span class="string">'msg'</span>: <span class="string">''</span></span><br><span class="line">&#125;;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> goldTax.card != <span class="string">'undefined'</span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">    goldTax.card.closeCard();</span><br><span class="line">    result.code = goldTax.card.RetCode;</span><br><span class="line">            result.msg = goldTax.card.RetMsg;</span><br><span class="line">    <span class="comment">// RetCode 9000 调用成功，其他失败</span></span><br><span class="line">    <span class="keyword">if</span> (result.code == <span class="number">9000</span>) &#123;</span><br><span class="line">    result.success = <span class="literal">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    result.success = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">    result.success = <span class="literal">false</span>;</span><br><span class="line">            result.code = <span class="number">-1</span>;</span><br><span class="line">            result.msg = <span class="string">'ActiveX Error, '</span> + e.description;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询库存发票</span></span><br><span class="line"><span class="comment">     * @param invKind 发票种类</span></span><br><span class="line"><span class="comment">  * @return </span></span><br><span class="line"><span class="comment"> * &lt;pre&gt;</span></span><br><span class="line"><span class="comment"> *     &#123;</span></span><br><span class="line"><span class="comment"> *        'success': true/false, // 成功或者失败</span></span><br><span class="line"><span class="comment"> *        'code': -1/其他, // 错误码，-1 为系统错误</span></span><br><span class="line"><span class="comment"> *        'msg': 'xxx', // 错误信息</span></span><br><span class="line"><span class="comment"> *        'data': &#123;&#125; // 接口返回相关数据</span></span><br><span class="line"><span class="comment"> *     &#125;</span></span><br><span class="line"><span class="comment"> * &lt;/pre&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    invoiceInventory: <span class="function"><span class="keyword">function</span>(<span class="params">invKind</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> result = &#123;</span><br><span class="line"><span class="string">'success'</span>: <span class="literal">false</span>,</span><br><span class="line"><span class="string">'code'</span>: <span class="number">-1</span>,</span><br><span class="line"><span class="string">'msg'</span>: <span class="string">''</span>,</span><br><span class="line"><span class="string">'data'</span>: &#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> goldTax.card != <span class="string">'undefined'</span>) &#123;</span><br><span class="line">    goldTax.card.InfoKind = invKind;</span><br><span class="line">    goldTax.card.GetInfo();</span><br><span class="line">    result.code = goldTax.card.RetCode;</span><br><span class="line">            result.msg = goldTax.card.RetMsg;</span><br><span class="line">    <span class="comment">// RetCode 3011 读取成功，其他失败</span></span><br><span class="line">    <span class="keyword">if</span> (result.code == <span class="number">3011</span>) &#123;</span><br><span class="line">    result.success = <span class="literal">true</span>;</span><br><span class="line">    result.data = &#123;</span><br><span class="line">    RetCode: goldTax.card.RetCode, <span class="comment">/* RetCode - 状态码， 3011 读取成功，其他失败 */</span></span><br><span class="line">            RetMsg: goldTax.card.RetMsg, <span class="comment">/* RetMsg 状态信息 */</span></span><br><span class="line">            InfoTypeCode: goldTax.card.InfoTypeCode, <span class="comment">/* 要开具发票的十位代码。为空或全为0时，表示无可用发票 */</span></span><br><span class="line">            InfoNumber: goldTax.card.InfoNumber, <span class="comment">/* 要开具发票的号码 */</span></span><br><span class="line">            InvStock: goldTax.card.InvStock, <span class="comment">/* 剩余的可用发票份数 */</span></span><br><span class="line">            TaxClock: goldTax.card.TaxClock <span class="comment">/* 金税盘时钟 */</span></span><br><span class="line">    &#125;;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    result.success = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    result.success = <span class="literal">false</span>;</span><br><span class="line">            result.code = <span class="number">-1</span>;</span><br><span class="line">            result.msg = <span class="string">'Please Open Card First'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">result.success = <span class="literal">false</span>;</span><br><span class="line">            result.code = <span class="number">-1</span>;</span><br><span class="line">            result.msg = <span class="string">'ActiveX Error, '</span> + e.description;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 发票校验</span></span><br><span class="line"><span class="comment">     * @param o 传入发票信息</span></span><br><span class="line"><span class="comment">     * @return </span></span><br><span class="line"><span class="comment"> * &lt;pre&gt;</span></span><br><span class="line"><span class="comment"> *     &#123;</span></span><br><span class="line"><span class="comment"> *        'success': true/false, // 成功或者失败</span></span><br><span class="line"><span class="comment"> *        'code': -1/其他, // 错误码，-1 为系统错误</span></span><br><span class="line"><span class="comment"> *        'msg': 'xxx', // 错误信息</span></span><br><span class="line"><span class="comment"> *        'data': &#123;&#125; // 接口返回相关数据</span></span><br><span class="line"><span class="comment"> *     &#125;</span></span><br><span class="line"><span class="comment"> * &lt;/pre&gt;</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">    invoiceVeriferify: <span class="function"><span class="keyword">function</span>(<span class="params">o</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> goldTax.inner.invoice(<span class="number">1</span>, o);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 发票开具</span></span><br><span class="line"><span class="comment">     * @param o 传入发票信息</span></span><br><span class="line"><span class="comment">     * @return </span></span><br><span class="line"><span class="comment"> * &lt;pre&gt;</span></span><br><span class="line"><span class="comment"> *     &#123;</span></span><br><span class="line"><span class="comment"> *        'success': true/false, // 成功或者失败</span></span><br><span class="line"><span class="comment"> *        'code': -1/其他, // 错误码，-1 为系统错误</span></span><br><span class="line"><span class="comment"> *        'msg': 'xxx', // 错误信息</span></span><br><span class="line"><span class="comment"> *        'data': &#123;&#125; // 接口返回相关数据</span></span><br><span class="line"><span class="comment"> *     &#125;</span></span><br><span class="line"><span class="comment"> * &lt;/pre&gt;</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">    invoicing: <span class="function"><span class="keyword">function</span>(<span class="params">o</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> goldTax.inner.invoice(<span class="number">0</span>, o);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 发票打印</span></span><br><span class="line"><span class="comment">     * @param o 传入发票信息</span></span><br><span class="line"><span class="comment">     * @return </span></span><br><span class="line"><span class="comment"> * &lt;pre&gt;</span></span><br><span class="line"><span class="comment"> *     &#123;</span></span><br><span class="line"><span class="comment"> *        'success': true/false, // 成功或者失败</span></span><br><span class="line"><span class="comment"> *        'code': -1/其他, // 错误码，-1 为系统错误</span></span><br><span class="line"><span class="comment"> *        'msg': 'xxx' // 错误信息</span></span><br><span class="line"><span class="comment"> *     &#125;</span></span><br><span class="line"><span class="comment"> * &lt;/pre&gt;</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">    printInv: <span class="function"><span class="keyword">function</span>(<span class="params">o</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> result = &#123;</span><br><span class="line"><span class="string">'success'</span>: <span class="literal">false</span>,</span><br><span class="line"><span class="string">'code'</span>: <span class="number">-1</span>,</span><br><span class="line"><span class="string">'msg'</span>: <span class="string">''</span></span><br><span class="line">&#125;;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> goldTax.card != <span class="string">'undefined'</span>) &#123;</span><br><span class="line">    goldTax.card.InfoKind = o.InfoKind; <span class="comment">/* 发票种类（0：专用发票  2：普通发票  11：货物运输业增值税专用发票  12：机动车销售统一发票） */</span></span><br><span class="line">    goldTax.card.InfoTypeCode = o.InfoTypeCode; <span class="comment">/* 要打印发票的十位代码 */</span></span><br><span class="line">                goldTax.card.InfoNumber = o.InfoNumber; <span class="comment">/* 要打印发票的号码 */</span></span><br><span class="line">                goldTax.card.GoodsListFlag = o.GoodsListFlag; <span class="comment">/* 销货清单标志，0 – 打印发票，1 – 打印销货清单 */</span></span><br><span class="line">                goldTax.card.InfoShowPrtDlg = o.InfoShowPrtDlg; <span class="comment">/* 打印时是否显示边距确认对话框，0 – 不出现，1 – 出现 */</span></span><br><span class="line">                <span class="comment">// 调用接口</span></span><br><span class="line">    goldTax.card.PrintInv();</span><br><span class="line">    result.code = goldTax.card.RetCode;</span><br><span class="line">            result.msg = goldTax.card.RetMsg;</span><br><span class="line">    <span class="comment">// RetCode 5011 打印成功，5001 – 未找到发票或清单，5012 – 未打印，5013 – 打印失败</span></span><br><span class="line">    <span class="keyword">if</span> (result.code == <span class="number">5011</span>) &#123;</span><br><span class="line">    result.success = <span class="literal">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    result.success = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    result.success = <span class="literal">false</span>;</span><br><span class="line">            result.code = <span class="number">-1</span>;</span><br><span class="line">            result.msg = <span class="string">'Please Open Card First'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;  <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">            result.success = <span class="literal">false</span>;</span><br><span class="line">            result.code = <span class="number">-1</span>;</span><br><span class="line">            result.msg = <span class="string">'ActiveX Error, '</span> + e.description;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 已开发票作废</span></span><br><span class="line"><span class="comment">     * @param o 传入发票信息</span></span><br><span class="line"><span class="comment">     * @return </span></span><br><span class="line"><span class="comment"> * &lt;pre&gt;</span></span><br><span class="line"><span class="comment"> *     &#123;</span></span><br><span class="line"><span class="comment"> *        'success': true/false, // 成功或者失败</span></span><br><span class="line"><span class="comment"> *        'code': -1/其他, // 错误码，-1 为系统错误</span></span><br><span class="line"><span class="comment"> *        'msg': 'xxx' // 错误信息</span></span><br><span class="line"><span class="comment"> *     &#125;</span></span><br><span class="line"><span class="comment"> * &lt;/pre&gt;</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">    cancelInv: <span class="function"><span class="keyword">function</span>(<span class="params">o</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> result = &#123;</span><br><span class="line"><span class="string">'success'</span>: <span class="literal">false</span>,</span><br><span class="line"><span class="string">'code'</span>: <span class="number">-1</span>,</span><br><span class="line"><span class="string">'msg'</span>: <span class="string">''</span></span><br><span class="line">&#125;;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> goldTax.card != <span class="string">'undefined'</span>) &#123;</span><br><span class="line">    goldTax.card.InfoKind = o.InfoKind; <span class="comment">/* 发票种类（0：专用发票  2：普通发票  11：货物运输业增值税专用发票  12：机动车销售统一发票） */</span></span><br><span class="line">    goldTax.card.InfoTypeCode = o.InfoTypeCode; <span class="comment">/* 要作废发票的十位或十二位代码 */</span></span><br><span class="line">                goldTax.card.InfoNumber = o.InfoNumber; <span class="comment">/* 要作废发票的号码 */</span></span><br><span class="line">                <span class="comment">// 调用接口</span></span><br><span class="line">    goldTax.card.CancelInv();</span><br><span class="line">    result.code = goldTax.card.RetCode;</span><br><span class="line">            result.msg = goldTax.card.RetMsg;</span><br><span class="line">    <span class="comment">// RetCode 6011 打印成功，6001 – 当月发票库未找到该发票，6002 – 该发票已经作废，6012 – 作废失败，6013 – 作废失败(异常)</span></span><br><span class="line">    <span class="keyword">if</span> (result.code == <span class="number">6011</span>) &#123;</span><br><span class="line">    result.success = <span class="literal">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    result.success = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    result.success = <span class="literal">false</span>;</span><br><span class="line">            result.code = <span class="number">-1</span>;</span><br><span class="line">            result.msg = <span class="string">'Please Open Card First'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;  <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">            result.success = <span class="literal">false</span>;</span><br><span class="line">            result.code = <span class="number">-1</span>;</span><br><span class="line">            result.msg = <span class="string">'ActiveX Error, '</span> + e.description;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 内部方法</span></span><br><span class="line">    inner: &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * invoice 接口</span></span><br><span class="line"><span class="comment">     * @param checkEWM 默认为0（0: 发票开具, 1: 发票校验, 2: 空白作废)</span></span><br><span class="line"><span class="comment">     * @param o 传入发票信息</span></span><br><span class="line"><span class="comment">     * @return </span></span><br><span class="line"><span class="comment"> * &lt;pre&gt;</span></span><br><span class="line"><span class="comment"> *     &#123;</span></span><br><span class="line"><span class="comment"> *        'success': true/false, // 成功或者失败</span></span><br><span class="line"><span class="comment"> *        'code': -1/其他, // 错误码，-1 为系统错误</span></span><br><span class="line"><span class="comment"> *        'msg': 'xxx', // 错误信息</span></span><br><span class="line"><span class="comment"> *        'data': &#123;&#125; // 接口返回相关数据</span></span><br><span class="line"><span class="comment"> *     &#125;</span></span><br><span class="line"><span class="comment"> * &lt;/pre&gt;</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">    invoice: <span class="function"><span class="keyword">function</span>(<span class="params">checkEWM, o</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> result = &#123;</span><br><span class="line"><span class="string">'success'</span>: <span class="literal">false</span>,</span><br><span class="line"><span class="string">'code'</span>: <span class="number">-1</span>,</span><br><span class="line"><span class="string">'msg'</span>: <span class="string">''</span>,</span><br><span class="line"><span class="string">'data'</span>: &#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> goldTax.card != <span class="string">'undefined'</span>) &#123;</span><br><span class="line">    <span class="comment">// CheckEWM值默认为0（为1时用于发票校验。</span></span><br><span class="line">    <span class="comment">// 注意：一旦CheckEWM值置1用于发票校验之后，</span></span><br><span class="line">    <span class="comment">//如果要再进行发票开具必须手动将CheckEWM值置为0，否则Invoice()方法的功能将一直处于发票校验状态）</span></span><br><span class="line">    goldTax.card.CheckEWM = checkEWM; </span><br><span class="line">    goldTax.card.InvInfoInit(); <span class="comment">/* 初始化发票抬头信息 */</span></span><br><span class="line">    goldTax.card.InfoKind = o.InfoKind; <span class="comment">/* 增值税普通发票2 专票0 */</span></span><br><span class="line">    goldTax.card.InfoClientName = o.InfoClientName; <span class="comment">/* 购方名称 */</span></span><br><span class="line">                goldTax.card.InfoClientTaxCode = o.InfoClientTaxCode; <span class="comment">/* 购方税号 */</span></span><br><span class="line">                goldTax.card.InfoClientBankAccount = o.InfoClientBankAccount; <span class="comment">/* 购方开户行及账号 */</span></span><br><span class="line">                goldTax.card.InfoClientAddressPhone = o.InfoClientAddressPhone; <span class="comment">/* 购方地址电话 */</span></span><br><span class="line">                goldTax.card.InfoSellerBankAccount = o.InfoSellerBankAccount; <span class="comment">/* 销方开户行及账号 */</span></span><br><span class="line">                goldTax.card.InfoSellerAddressPhone = o.InfoSellerAddressPhone; <span class="comment">/* 销方地址电话 */</span></span><br><span class="line">                <span class="comment">// 如果是多商品多税率 税率应该放到下面商品信息循环里</span></span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">typeof</span> o.InfoTaxRate != <span class="string">'undefined'</span> &amp;&amp; o.InfoTaxRate) &#123; </span><br><span class="line">                goldTax.card.InfoTaxRate = o.InfoTaxRate; <span class="comment">/* 税率,(已授权的税率， 17% 传17) */</span></span><br><span class="line">                &#125;</span><br><span class="line">                goldTax.card.InfoNotes = o.InfoNotes; <span class="comment">/* 备注 */</span></span><br><span class="line">                goldTax.card.InfoInvoicer = o.InfoInvoicer; <span class="comment">/* 开票人 */</span></span><br><span class="line">                <span class="comment">// 复核人，可为空</span></span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">typeof</span> o.InfoChecker != <span class="string">'undefined'</span> &amp;&amp; o.InfoChecker) &#123;</span><br><span class="line">                goldTax.card.InfoChecker = o.InfoChecker;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 收款人，可为空</span></span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">typeof</span> o.InfoCashier != <span class="string">'undefined'</span> &amp;&amp; o.InfoCashier) &#123;</span><br><span class="line">                goldTax.card.InfoCashier = o.InfoCashier;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 如不为空，则开具销货清单，此为发票上商品名称栏的清单信息，应为“(详见销货清单)”字样</span></span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">typeof</span> o.InfoListName != <span class="string">'undefined'</span> &amp;&amp; o.InfoListName) &#123; </span><br><span class="line">                goldTax.card.InfoListName = o.InfoListName;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 清空商品明细列表</span></span><br><span class="line">                goldTax.card.ClearInvList(); </span><br><span class="line">                <span class="comment">// 遍历行</span></span><br><span class="line">                $.each(o.InvList, <span class="function"><span class="keyword">function</span>(<span class="params">i, v</span>) </span>&#123;</span><br><span class="line">                goldTax.card.InvListInit(); <span class="comment">/* 初始化发票明细信息各项属性 */</span></span><br><span class="line">                goldTax.card.ListGoodsName = v.ListGoodsName; <span class="comment">/* 商品或劳务名称 */</span></span><br><span class="line">                goldTax.card.ListTaxItem = v.ListTaxItem; <span class="comment">/* 税目，4位数字，商品所属类别 */</span></span><br><span class="line">                goldTax.card.ListStandard = v.ListStandard; <span class="comment">/* 规格型号 */</span></span><br><span class="line">                <span class="comment">// 计量单位，如计量单位为空，则忽略数量和单价</span></span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">typeof</span> v.ListUnit != <span class="string">'undefined'</span> &amp;&amp; v.ListUnit) &#123;</span><br><span class="line">                goldTax.card.ListUnit = v.ListUnit;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 建议传入数量和含税单价或含税金额 由接口计算带小数的税额 规避误差</span></span><br><span class="line">                goldTax.card.ListNumber = v.ListNumber; <span class="comment">// 数量</span></span><br><span class="line">                goldTax.card.ListPrice = v.ListPrice; <span class="comment">// 单价</span></span><br><span class="line">                <span class="comment">// 金额，可以不传(为0)，由接口软件计算，如传入则应符合计算关系</span></span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">typeof</span> v.ListAmount != <span class="string">'undefined'</span> &amp;&amp; v.ListAmount ) &#123;</span><br><span class="line">                goldTax.card.ListAmount = v.ListAmount;</span><br><span class="line">                &#125;</span><br><span class="line">                goldTax.card.ListPriceKind = v.ListPriceKind; <span class="comment">/* 含税价标志，单价和金额的种类， 0为不含税价，1为含税价 */</span></span><br><span class="line">                <span class="comment">// 税额可以不传(为0)，由接口软件计算，如传入则应符合计算关系</span></span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">typeof</span> v.ListTaxAmount != <span class="string">'undefined'</span> &amp;&amp; v.ListTaxAmount) &#123;</span><br><span class="line">                goldTax.card.ListTaxAmount = v.ListTaxAmount;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 添加一行</span></span><br><span class="line">                goldTax.card.AddInvList();</span><br><span class="line">                &#125;);</span><br><span class="line">                <span class="comment">// 调用接口</span></span><br><span class="line">    goldTax.card.Invoice();</span><br><span class="line">    result.code = goldTax.card.RetCode;</span><br><span class="line">            result.msg = goldTax.card.RetMsg;</span><br><span class="line">    <span class="comment">// RetCode 4011 开票成功，其他失败</span></span><br><span class="line">    <span class="keyword">if</span> (result.code == <span class="number">4011</span>) &#123;</span><br><span class="line">    result.success = <span class="literal">true</span>;</span><br><span class="line">    result.data = &#123;</span><br><span class="line">    RetCode: goldTax.card.RetCode, <span class="comment">/* RetCode - 状态码， 3011 读取成功，其他失败 */</span></span><br><span class="line">            RetMsg: goldTax.card.RetMsg, <span class="comment">/* RetMsg 状态信息 */</span></span><br><span class="line">            InfoAmount: goldTax.card.InfoAmount , <span class="comment">/* 合计不含税金额 */</span></span><br><span class="line">            InfoTaxAmount: goldTax.card.InfoTaxAmount, <span class="comment">/* 合计税额 */</span></span><br><span class="line">            InfoInvDate: goldTax.card.InfoInvDate, <span class="comment">/* 开票日期 */</span></span><br><span class="line">            InfMonth: goldTax.card.InfMonth, <span class="comment">/* 所属月份 */</span></span><br><span class="line">            InfoTypeCode: goldTax.card.InfoTypeCode, <span class="comment">/* 发票十位代码 */</span></span><br><span class="line">            InfoNumber: goldTax.card.InfoNumber, <span class="comment">/* 发票号码 */</span></span><br><span class="line">            GoodsListFlag: goldTax.card.GoodsListFlag <span class="comment">/* 销货清单标志，0 – 无销货清单，1 – 有销货清单 */</span></span><br><span class="line">    &#125;;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    result.success = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    result.success = <span class="literal">false</span>;</span><br><span class="line">            result.code = <span class="number">-1</span>;</span><br><span class="line">            result.msg = <span class="string">'Please Open Card First'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">            result.success = <span class="literal">false</span>;</span><br><span class="line">            result.code = <span class="number">-1</span>;</span><br><span class="line">            result.msg = <span class="string">'ActiveX Error, '</span> + e.description;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="相关资料"><a href="#相关资料" class="headerlink" title="相关资料"></a>相关资料</h3><p><code>CSDN</code> 需要积分下载 <a href="https://download.csdn.net/download/qq_36894469/9891113" target="_blank" rel="noopener">金税 防伪税控 组件接口 开发文档 代码案例</a></p><p>没有积分的 <a href="https://pan.baidu.com/s/11djfBHQMfhxpsLi3BqOOSA" target="_blank" rel="noopener">戳这里</a></p>]]></content>
    
    <summary type="html">
    
      最近项目要求与单机版的金税盘接口进行对接，在这里简单记录一下自己的开发经验，希望可以帮助到有需要的人
    
    </summary>
    
      <category term="随笔" scheme="http://yoursite.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
      <category term="ActiveX" scheme="http://yoursite.com/tags/ActiveX/"/>
    
      <category term="金税" scheme="http://yoursite.com/tags/%E9%87%91%E7%A8%8E/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2018/08/20/hello-world/"/>
    <id>http://yoursite.com/2018/08/20/hello-world/</id>
    <published>2018-08-20T10:27:33.678Z</published>
    <updated>2018-08-20T12:41:36.121Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      Hello Word!
    
    </summary>
    
    
  </entry>
  
</feed>
